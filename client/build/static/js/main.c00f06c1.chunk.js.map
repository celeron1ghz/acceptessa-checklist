{"version":3,"sources":["pane/CircleListPane.js","pane/CirclecutPane.js","pane/FavoriteListPane.js","pane/MapPane.js","modal/CircleDescriptionModal.js","modal/PublicLinkModal.js","modal/ExportChecklistModal.js","route/App.js","route/Error.js","route/Router.js","registerServiceWorker.js","index.js"],"names":["CircleListPane","props","context","state","table","circle","this","onAddFavorite","onRemoveFavorite","onRowClick","onRemovePublicChecklist","favorites","showChecklistComponent","loadings","publicChecklist","enableChecklist","spaceSymSorter","circleList","_","cloneDeep","circles","c","circle_id","favorite","idx","makePlaceholderFilter","placeholder","filter","onChange","type","style","width","value","event","target","columns","Header","headerStyle","backgroundColor","color","accessor","show","resizable","className","sortMethod","Filter","uniq","map","space_sym","sym","Cell","row","href","onClick","e","stopPropagation","rel","icon","sortable","unshift","filterable","original","user","Button","variant","size","spin","pulse","removeFavorite","addFavorite","fontSize","jp","circle_name","penname","space_num","circle_link","circle_comment","Card","body","bg","config","member_id","Badge","pill","Object","keys","length","removePublicChecklist","bind","filtered","f","id","data","sortedData","pageSize","showPageSizeOptions","showPaginationTop","showPaginationBottom","loading","defaultSorted","defaultFilterMethod","column","pivotId","undefined","String","indexOf","onFetchData","instance","setState","getTrProps","a","b","rowClick","getTdProps","padding","React","Component","CirclecutPane","onImageClick","spaceClass","space_count","height","offset","once","src","circlecut","replace","alt","FavoriteListPane","CirclePositionElement","styled","div","blink","bgColor","top","left","MapPane","image","maps","onCircleClick","circleIdx","numbers","split","n","parseInt","image_height","maxHeight","display","border","image_width","background","position","mappings","pos","s","sprintf","OverlayTrigger","placement","overlay","Tooltip","t","l","w","h","generateTweetLink","tweetParams","text","url","param","reduce","result","key","encodeURIComponent","slice","onClose","onUpdateComment","exhibitionName","exhibitionID","useState","comment","setComment","Modal","onHide","closeButton","Title","Body","Image","block","Row","Col","xs","sm","md","lg","FormControl","componentClass","pixiv_url","site_url","twitter_id","whiteSpace","wordWrap","window","location","Footer","me","onPublicLinkClick","URLSearchParams","search","publicUrl","origin","path","get","screen_name","ToggleButtonGroup","name","defaultValue","public","ToggleButton","checklistUrl","onExport","export","library","add","fab","fas","far","AdminRoot","favoriteIdx","showCircleDescModal","showPublicLinkModal","showExportChecklistModal","exhibition","selectedCircle","exportChecklistUrl","ENDPOINT","openCircleDescModal","closeCircleDescModal","updateFavoriteComment","updatePublicLinkSetting","login","logout","addLoading","removeLoading","exportChecklist","openPublicLinkModal","closePublicLinkModal","openExportChecklistModal","closeExportChecklistModal","removePublicChecklistDisplay","getCircleList","getUserData","getShareChecklist","args","load_type","token","localStorage","getItem","fetch","headers","Headers","method","JSON","stringify","cors","then","json","catch","err","alert","error","command","Promise","reject","credentials","console","log","resolve","ok","sorter","sort_order","sortMap","zipObject","range","sort","componentWillReceiveProps","status","callChecklistApi","exhibition_id","open","addEventListener","setItem","clear","append","history","push","toString","delete","isPublic","Array","exhibition_name","Tab","Container","defaultActiveKey","Nav","Item","Link","eventKey","Content","Pane","CircleDescriptionModal","tweet","PublicLinkModal","ExportChecklistModal","withRouter","Error","Router","exact","component","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kXAmSeA,E,kDA1Rb,WAAYC,EAAOC,GAAU,IAAD,8BAC1B,cAAMD,EAAOC,IACRC,MAAQ,CAAEC,MAAO,MAFI,E,+CAK5B,SAAYC,GACVC,KAAKL,MAAMM,cAAcF,K,4BAG3B,SAAeA,GACbC,KAAKL,MAAMO,iBAAiBH,K,sBAG9B,SAASA,GACPC,KAAKL,MAAMQ,WAAWJ,K,mCAGxB,WACEC,KAAKL,MAAMS,4B,oBAGb,WAAU,IAAD,SACP,EAA0GJ,KAAKL,MAAvGU,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,uBAAwBC,EAA3C,EAA2CA,SAAUC,EAArD,EAAqDA,gBAAiBC,EAAtE,EAAsEA,gBAAiBC,EAAvF,EAAuFA,eAC/EZ,EAAUE,KAAKH,MAAfC,MACFa,EAAaC,IAAEC,UAAUb,KAAKL,MAAMmB,SAHnC,cAKSH,GALT,IAKP,2BAA4B,CAAC,IAAlBI,EAAiB,QACtBV,EAAUU,EAAEC,aACdD,EAAEE,SAAWZ,EAAUU,EAAEC,YAGvBR,GAAmBA,EAAgBU,IAAIH,EAAEC,aAC3CD,EAAEP,gBAAkBA,EAAgBU,IAAIH,EAAEC,aAXvC,8BAeP,SAASG,EAAsBC,GAC7B,OAAO,gBAAEC,EAAF,EAAEA,OAAQC,EAAV,EAAUA,SAAV,OACL,uBAAOC,KAAK,OACVH,YAAaA,EACbI,MAAO,CACLC,MAAO,QAETC,MAAOL,EAASA,EAAOK,MAAQ,GAC/BJ,SAAU,SAACK,GAAD,OAAWL,EAASK,EAAMC,OAAOF,WAKjD,IAAMG,EAAU,CACd,CACEC,OAAQ,2BACRC,YAAa,CAAEC,gBAAiB,OAAQC,MAAO,QAC/CJ,QAAS,CACP,CACEE,YAAa,CAAEC,gBAAiB,QAChCE,SAAU,YACVT,MAAO,GACPU,KAAM1B,EACN2B,WAAW,EACXC,UAAW,cACXP,OAAQ,eACRQ,WAAY5B,EACZ6B,OAAQ,gBAAGlB,EAAH,EAAGA,OAAQC,EAAX,EAAWA,SAAX,OACN,yBACEA,SAAU,SAAAK,GAAK,OAAIL,EAASK,EAAMC,OAAOF,QACzCF,MAAO,CAAEC,MAAO,QAChBC,MAAOL,EAASA,EAAOK,MAAQ,MAHjC,UAIE,wBAAQA,MAAM,KACbd,IAAE4B,KAAK7B,EAAW8B,KAAI,SAAA1B,GAAC,OAAIA,EAAE2B,cAAYD,KAAI,SAAAE,GAAG,OAAI,wBAAkBjB,MAAOiB,EAAzB,SAA+BA,GAAlBA,WAEtE,CACAZ,YAAa,CAAEC,gBAAiB,QAChCE,SAAU,YACVT,MAAO,GACPU,KAAM1B,EACN2B,WAAW,EACXC,UAAW,cACXP,OAAQ,eACRS,OAAQpB,OAId,CACEW,OAAQ,uCACRC,YAAa,CAAEC,gBAAiB,OAAQC,MAAO,QAC/CJ,QAAS,CACP,CACEE,YAAa,CAAEC,gBAAiB,QAChCE,SAAU,cACVJ,OAAQ,iCACRS,OAAQpB,EAAsB,mBAC9B,CACAY,YAAa,CAAEC,gBAAiB,QAChCE,SAAU,UACVT,MAAO,IACPK,OAAQ,qBACRS,OAAQpB,EAAsB,mBAEhC,CACEY,YAAa,CAAEC,gBAAiB,QAChCE,SAAU,aACVG,UAAW,cACXZ,MAAO,GACPU,KAAM1B,EACN2B,WAAW,EACXN,OAAQ,UACRc,KAAM,SAAAC,GAAG,OAAIA,EAAInB,MACX,mBAAGoB,KAAM,uBAAyBD,EAAInB,MAAOqB,QAAS,SAAAC,GAAOA,EAAEC,mBAAqBrB,OAAO,SAASsB,IAAI,sBAAxG,SAA8H,cAAC,IAAD,CAAiBC,KAAM,CAAC,MAAO,eAC7J,IACNC,UAAU,GAEZ,CACErB,YAAa,CAAEC,gBAAiB,QAChCE,SAAU,cACVG,UAAW,cACXZ,MAAO,GACPU,KAAM1B,EACN2B,WAAW,EACXN,OAAQ,MACRc,KAAM,SAAAC,GAAG,OAAIA,EAAInB,MACX,mBAAGoB,KAAMD,EAAInB,MAAOqB,QAAS,SAAAC,GAAOA,EAAEC,mBAAqBrB,OAAO,SAASsB,IAAI,sBAA/E,SAAqG,cAAC,IAAD,CAAiBC,KAAM,CAAC,MAAO,yBACpI,IACNC,UAAU,GAEZ,CACErB,YAAa,CAAEC,gBAAiB,QAChCE,SAAU,iBACVG,UAAW,cACXZ,MAAO,IACPU,KAAM1B,EACNqB,OAAQ,2BACRS,OAAQpB,EAAsB,kBAC9ByB,KAAM,SAAAC,GAAG,OAAIA,EAAInB,MACX,cAAC,IAAD,CAAiByB,KAAM,CAAC,MAAO,kBAC/B,QAMV7C,GACFuB,EAAQwB,QAAQ,CACdvB,OAAQ,cAAC,IAAD,CAAiBqB,KAAM,CAAC,MAAO,UACvCpB,YAAa,CAAEC,gBAAiB,QAChCH,QAAS,CACP,CACEE,YAAa,CAAEC,gBAAiB,QAChCF,OAAQ,GACRI,SAAU,WACVT,MAAO,GACPW,WAAW,EACXkB,YAAY,EACZjB,UAAW,cACXO,KAAM,SAAAC,GACJ,OAAOtC,EAASsC,EAAIU,SAASvC,YAAcT,EAASiD,KAChD,cAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUC,KAAK,KAAKnC,MAAO,CAAEC,MAAO,QAAUsB,QAAS,SAAAC,GAAOA,EAAEC,mBAAhF,SACE,cAAC,IAAD,CAAiBE,KAAM,CAAC,MAAO,WAAYS,MAAI,EAACC,OAAO,MAEzDhB,EAAIU,SAAStC,SACX,eAACwC,EAAA,EAAD,CAAQC,QAAQ,SAASC,KAAK,KAAKnC,MAAO,CAAEC,MAAO,QAAUsB,QAAS,SAAAC,GAAOA,EAAEC,kBAAmB,EAAKa,eAAejB,EAAIU,WAA1H,UACE,cAAC,IAAD,CAAiBJ,KAAM,CAAC,MAAO,UADjC,mBAGA,eAACM,EAAA,EAAD,CAAQC,QAAQ,UAAUC,KAAK,KAAKnC,MAAO,CAAEC,MAAO,QAAUsB,QAAS,SAAAC,GAAOA,EAAEC,kBAAmB,EAAKc,YAAYlB,EAAIU,WAAxH,UACE,cAAC,IAAD,CAAiBJ,KAAM,CAAC,MAAO,UADjC,wBASZ3C,GACFqB,EAAQwB,QAAQ,CACdvB,OAAQ,cAAC,IAAD,CAAiBqB,KAAM,CAAC,MAAO,WACvCpB,YAAa,CAAEC,gBAAiB,OAAQC,MAAO,QAC/CJ,QAAS,CACP,CACEE,YAAa,CAAEC,gBAAiB,OAAQgC,SAAU,QAClD9B,SAAU,kBACVT,MAAO,GACPW,WAAW,EACXkB,YAAY,EACZjB,UAAW,cACXO,KAAM,SAAAC,GAAG,OAAIA,EAAInB,MACX,cAAC,IAAD,CAAiByB,KAAM,CAAC,MAAO,WAC/B,QAOd,IAAMc,EAAK,CACTC,YAAa,iCACbC,QAAa,eACbzB,UAAa,eACb0B,UAAa,eACbC,YAAa,mDACbC,eAAgB,0DAGlB,OAAO,gCAEH9D,GACE,eAAC+D,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAG,QAAQpC,UAAU,gBAAhC,UACE,oBAAGS,KAAM,uBAAyBtC,EAAgBkE,OAAOC,UAAW/C,OAAO,SAASsB,IAAI,sBAAxF,UACE,cAAC,IAAD,CAAiBC,KAAM,CAAC,MAAO,aAAe3C,EAAgBkE,OAAOC,aAFzE,wEAKQ,cAACC,EAAA,EAAD,CAAOC,MAAI,EAACJ,GAAG,UAAf,SAA0BK,OAAOC,KAAKvE,EAAgBU,KAAK8D,SALnE,oBAMI,cAAC,IAAD,CAAiB7B,KAAM,CAAC,MAAO,WANnC,+DAOE,qBAAKd,UAAU,aAAf,SACE,eAACoB,EAAA,EAAD,CAAQC,QAAQ,UAAUC,KAAK,KAAKZ,QAAS/C,KAAKiF,sBAAsBC,KAAKlF,MAA7E,UACE,cAAC,IAAD,CAAiBmD,KAAM,CAAC,MAAO,WADjC,gDAONrD,GACA,qBAAKuC,UAAU,OAAf,SAE8B,IAA1BvC,EAAMqF,SAASH,OACX,gCACGlF,EAAMqF,SAAS1C,KAAI,SAAA2C,GAAC,OAAI,iCAAiB,4BAAInB,EAAGmB,EAAEC,MAA1B,KAAqCD,EAAE1D,MAAvC,OAAW0D,EAAEC,OADxC,oCAEG,4BAAIvF,EAAMwF,KAAKN,SAFlB,mCAEoC,4BAAIlF,EAAMyF,WAAWP,SAFzD,cAIA,sBAAK3C,UAAU,aAAf,UACE,cAAC,IAAD,CAAiBc,KAAM,CAAC,MAAO,iBADjC,yJAMV,cAAC,IAAD,CACEG,YAAU,EACVjB,UAAU,2BACVmD,SAAU1F,GAAqC,IAA5BA,EAAMyF,WAAWP,OAAelF,EAAMyF,WAAWP,OAASrE,EAAWqE,OACxFS,qBAAqB,EACrBC,mBAAmB,EACnBC,sBAAsB,EACtBC,QAA+B,MAAtBjF,EAAWqE,OACpBnD,QAASA,EACTyD,KAAM3E,EACNkF,cAAe,CAAE,CAAER,GAAI,aAAe,CAAEA,GAAI,cAC5CS,oBAAqB,SAACzE,EAAQwB,EAAKkD,GACjC,IAAMV,EAAKhE,EAAO2E,SAAW3E,EAAOgE,GACpC,YAAmBY,IAAZpD,EAAIwC,KAA+D,IAA3Ca,OAAOrD,EAAIwC,IAAKc,QAAQ9E,EAAOK,QAEhE0E,YAAa,SAACvG,EAAOwG,GACnB,EAAKC,SAAS,CAAExG,MAAOD,KAEzB0G,WAAY,SAACC,EAAEC,GACb,MAAO,CACLjF,MAAO,CAAES,MAAOwE,GAAKA,EAAElD,UAAYkD,EAAElD,SAAStC,SAAW,MAAQ,IACjE8B,QAAS,WAAQ,EAAK2D,SAASD,EAAElD,aAGrCoD,WAAY,SAACH,EAAEC,GACb,MAAO,CACLjF,MAAO,CAAEoF,QAAS,eAGxB,8B,GAxQuBC,IAAMC,W,kBCiEpBC,I,EAAAA,EAnEf,YAAiI,IAAD,EAAvGjG,EAAuG,EAAvGA,QAAST,EAA8F,EAA9FA,UAAWE,EAAmF,EAAnFA,SAAUD,EAAyE,EAAzEA,uBAAwB0G,EAAiD,EAAjDA,aAAc/G,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,iBACpGS,EAAaC,IAAEC,UAAUC,GAD+F,cAG9GH,GAH8G,IAG9H,2BAA4B,CAAC,IAAlBI,EAAiB,QACtBV,EAAUU,EAAEC,aACdD,EAAEE,SAAWZ,EAAUU,EAAEC,aALiG,8BAS9H,OAAO,gCACL,sBAAKqB,UAAU,kBAAf,UACE,cAAC,IAAD,CAAiBc,KAAM,CAAC,MAAO,iBADjC,+HAGA,qBAAKd,UAAU,mBAAf,SAEI1B,EAAW8B,KAAI,SAAA1B,GACb,IAAIkG,EAAgC,MAAlBlG,EAAEmG,YAAuB,eAAiB,aAG5D,OAFInG,EAAEE,WAAUgG,GAAc,iBAG5B,sBAEE5E,UAAW4E,EAAa,kBACxBlE,QAAS,kBAAMiE,EAAajG,IAH9B,UAIE,qBAAKsB,UAAU,kBAAf,SACE,cAAC,IAAD,CAAU8E,OAAQ,IAAKC,OAAQ,EAAGC,MAAI,EAAtC,SACE,qBACEC,IAAKvG,EAAEwG,UAAYxG,EAAEwG,UAAUC,QAAQ,QAAS,UAAY,KAC5DnF,UAAU,gBACVoF,IAAK1G,EAAEmD,kBAIb,sBAAK7B,UAAU,kBAAf,UACGtB,EAAE2B,UAAU,uBAAM3B,EAAEqD,UAAUoD,QAAQ,IAAK,QAE5C,sBAAKnF,UAAU,mBAAf,UACE,qBAAKA,UAAU,iBAAf,SACGtB,EAAEmD,cAGH5D,GACA,qBAAK+B,UAAU,qBAAf,SAEI9B,EAASQ,EAAEC,WACP,eAACyC,EAAA,EAAD,CAAQC,QAAQ,UAAUC,KAAK,KAAKZ,QAAS,SAAAC,GAAOA,EAAEC,mBAAtD,UACA,cAAC,IAAD,CAAiBE,KAAM,CAAC,MAAO,WAAYS,MAAI,EAACC,OAAO,IADvD,yBAGA9C,EAAEE,SACA,eAACwC,EAAA,EAAD,CAAQC,QAAQ,SAASC,KAAK,KAAKZ,QAAS,SAAAC,GAAOA,EAAEC,kBAAmB/C,EAAiBa,IAAzF,UACA,cAAC,IAAD,CAAiBoC,KAAM,CAAC,MAAO,UAD/B,mBAGA,eAACM,EAAA,EAAD,CAAQC,QAAQ,UAAUC,KAAK,KAAKZ,QAAS,SAAAC,GAAOA,EAAEC,kBAAmBhD,EAAcc,IAAvF,UACA,cAAC,IAAD,CAAiBoC,KAAM,CAAC,MAAO,UAD/B,0BA/BXpC,EAAEwG,WAAaxG,EAAEC,oBCyIrB0G,E,8JA7Jb,SAAS3H,GACPC,KAAKL,MAAMQ,WAAWJ,K,oBAGxB,WAAU,IAAD,SACP,EAAsCC,KAAKL,MAAnCU,EAAR,EAAQA,UAAWK,EAAnB,EAAmBA,eACbC,EAAaC,IAAEC,UAAUb,KAAKL,MAAMmB,SAFnC,cAISH,GAJT,IAIP,2BAA4B,CAAC,IAAlBI,EAAiB,QACtBV,EAAUU,EAAEC,aACdD,EAAEE,SAAWZ,EAAUU,EAAEC,aANtB,8BAUP,SAASG,EAAsBC,GAC7B,OAAO,gBAAEC,EAAF,EAAEA,OAAQC,EAAV,EAAUA,SAAV,OACL,uBAAOC,KAAK,OACVH,YAAaA,EACbI,MAAO,CACLC,MAAO,QAETC,MAAOL,EAASA,EAAOK,MAAQ,GAC/BJ,SAAU,SAACK,GAAD,OAAWL,EAASK,EAAMC,OAAOF,WAKjD,IAAMyD,EAAWxE,EAAWU,QAAO,SAAAN,GAAC,OAAIA,EAAEE,YACpCY,EAAU,CACd,CACEC,OAAQ,2BACRC,YAAa,CAAEC,gBAAiB,OAAQC,MAAO,QAC/CJ,QAAS,CACP,CACEE,YAAa,CAAEC,gBAAiB,QAChCE,SAAU,YACVT,MAAO,GACPW,WAAW,EACXC,UAAW,cACXP,OAAQ,eACRQ,WAAY5B,EACZ6B,OAAQ,gBAAGlB,EAAH,EAAGA,OAAQC,EAAX,EAAWA,SAAX,OACJ,yBACIA,SAAU,SAAAK,GAAK,OAAIL,EAASK,EAAMC,OAAOF,QACzCF,MAAO,CAAEC,MAAO,QAChBC,MAAOL,EAASA,EAAOK,MAAQ,MAHnC,UAIE,wBAAQA,MAAM,KACbd,IAAE4B,KAAK7B,EAAW8B,KAAI,SAAA1B,GAAC,OAAIA,EAAE2B,cAAYD,KAAI,SAAAE,GAAG,OAAI,wBAAkBjB,MAAOiB,EAAzB,SAA+BA,GAAlBA,WAExE,CACAZ,YAAa,CAAEC,gBAAiB,QAChCE,SAAU,YACVT,MAAO,GACPW,WAAW,EACXC,UAAW,cACXP,OAAQ,eACRS,OAAQpB,OAId,CACEW,OAAQ,uCACRC,YAAa,CAAEC,gBAAiB,OAAQC,MAAO,QAC/CJ,QAAS,CACP,CACEE,YAAa,CAAEC,gBAAiB,QAChCE,SAAU,cACVJ,OAAQ,iCACRS,OAAQpB,EAAsB,mBAC9B,CACAY,YAAa,CAAEC,gBAAiB,QAChCE,SAAU,UACVT,MAAO,IACPK,OAAQ,qBACRS,OAAQpB,EAAsB,mBAEhC,CACEY,YAAa,CAAEC,gBAAiB,QAChCE,SAAU,aACVG,UAAW,cACXZ,MAAO,GACPW,WAAW,EACXN,OAAQ,UACRc,KAAM,SAAAC,GAAG,OAAIA,EAAInB,MACX,mBAAGoB,KAAM,uBAAyBD,EAAInB,MAAOqB,QAAS,SAAAC,GAAOA,EAAEC,mBAAqBrB,OAAO,SAASsB,IAAI,sBAAxG,SAA8H,cAAC,IAAD,CAAiBC,KAAM,CAAC,MAAO,eAC7J,IACNC,UAAU,GAEZ,CACErB,YAAa,CAAEC,gBAAiB,QAChCE,SAAU,cACVG,UAAW,cACXZ,MAAO,GACPW,WAAW,EACXN,OAAQ,MACRc,KAAM,SAAAC,GAAG,OAAIA,EAAInB,MACX,mBAAGoB,KAAMD,EAAInB,MAAOqB,QAAS,SAAAC,GAAOA,EAAEC,mBAAqBrB,OAAO,SAASsB,IAAI,sBAA/E,SAAqG,cAAC,IAAD,CAAiBC,KAAM,CAAC,MAAO,yBACpI,IACNC,UAAU,GAEZ,CACErB,YAAa,CAAEC,gBAAiB,QAChCE,SAAU,iBACVG,UAAW,cACXZ,MAAO,IACPK,OAAQ,2BACRS,OAAQpB,EAAsB,kBAC9ByB,KAAM,SAAAC,GAAG,OAAIA,EAAInB,MACX,cAAC,IAAD,CAAiByB,KAAM,CAAC,MAAO,kBAC/B,QAMd,OAAO,gCACL,sBAAKd,UAAU,kBAAf,UACE,cAAC,IAAD,CAAiBc,KAAM,CAAC,MAAO,iBADjC,uJAGA,cAAC,IAAD,CACEG,YAAU,EACVjB,UAAU,2BAEVmD,SAAUL,EAASH,OACnBS,qBAAqB,EACrBC,mBAAmB,EACnBC,sBAAsB,EACtBC,QAA+B,MAAtBjF,EAAWqE,OACpBnD,QAASA,EACTyD,KAAMH,EACNU,cAAe,CAAE,CAAER,GAAI,aAAe,CAAEA,GAAI,cAC5CS,oBAAqB,SAACzE,EAAQwB,EAAKkD,GACjC,IAAMV,EAAKhE,EAAO2E,SAAW3E,EAAOgE,GACpC,YAAmBY,IAAZpD,EAAIwC,KAA+D,IAA3Ca,OAAOrD,EAAIwC,IAAKc,QAAQ9E,EAAOK,QAEhE6E,WAAY,SAACC,EAAEC,GACb,MAAO,CACL1D,QAAS,WAAQ,EAAK2D,SAASD,EAAElD,aAGrCoD,WAAY,SAACH,EAAEC,GACb,MAAO,CACLjF,MAAO,CAAEoF,QAAS,eAGxB,8B,GAlJyBC,IAAMC,W,oCCE/Ba,E,OAAwBC,EAAOC,IAAV,qhBAiBP,SAAAlI,GAAK,OAAIA,EAAMmI,MAAQ,eAAiB,MAItC,SAAAnI,GAAK,OAAIA,EAAMoI,WAE1B,SAAApI,GAAK,OAAIA,EAAM8B,OAAS,KACvB,SAAA9B,GAAK,OAAIA,EAAMwH,QAAU,KAC5B,SAAAxH,GAAK,OAAIA,EAAMqI,OACd,SAAArI,GAAK,OAAIA,EAAMsI,QAuEVC,MAnEf,YAAsE,IAAnDC,EAAkD,EAAlDA,MAAOC,EAA2C,EAA3CA,KAAMtH,EAAqC,EAArCA,QAAST,EAA4B,EAA5BA,UAAWgI,EAAiB,EAAjBA,cAClD,IAAKD,EACH,OAAO,wBAGT,IALmE,EAK7DE,EAAY,GALiD,cAOnDxH,GAPmD,IAOnE,2BAAyB,CAAC,IAAD,EAAdC,EAAc,QACjBwH,GAAWxH,EAAEqD,WAAa,IAAIoE,MAAM,KADnB,cAEPD,GAFO,IAEvB,2BAAyB,CAAC,IAAfE,EAAc,QACvBH,EAAUvH,EAAE2B,UAAY+F,GAAK1H,GAHR,gCAP0C,8BAcnE,OACE,sBAAKsB,UAAU,GAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,cAAC,IAAD,CAAiBc,KAAM,CAAC,MAAO,iBADjC,yKAGA,qBAAKd,UAAU,sBAAsBb,MAAO,CAAE2F,OAAQuB,SAASN,EAAKO,aAAc,IAAM,GAAK,KAAMC,UAAWF,SAASN,EAAKO,aAAc,IAAM,GAAK,MAArJ,SACE,qBAAKnH,MAAO,CACVqH,QAAS,eACTC,OAAQ,kBACR3B,OAAQiB,EAAKO,aAAe,KAC5BlH,MAAO2G,EAAKW,YAAc,KAC1BC,WAAW,OAAD,OAASb,EAAT,mBACVc,SAAU,YANZ,SASIb,EAAKc,SAASzG,KAAI,SAAA0G,GAChB,IAAMpJ,EAASuI,EAAUa,EAAIC,EAAIC,kBAAQ,OAAQF,EAAIV,IAErD,IAAK1I,EACH,OAAO,KAGT,IAAMgI,EAAUhI,GAAUM,EAAUN,EAAOiB,WACvC,oBACAjB,EACE,wBACA,qBAEN,OAAO,cAACuJ,EAAA,EAAD,CAELC,UAAU,OACVC,QACE,cAACC,EAAA,EAAD,CAASpE,GAAG,UAAZ,SACGtF,EAAM,UAAMA,EAAO2C,UAAb,YAA0B3C,EAAOqE,UAAjC,cAAgDrE,EAAOmE,YAAvD,aAAuEnE,EAAOoE,QAA9E,KAA2F,KALjG,SAQL,cAACwD,EAAD,CACEK,IAAKmB,EAAIO,EAAI,KACbzB,KAAMkB,EAAIQ,EAAI,KACdlI,MAAO0H,EAAIS,EACXzC,OAAQgC,EAAIU,EACZ9B,QAASA,EACTD,OAAO,EACP/E,QAAS,kBAAMsF,EAActI,OAd1BoJ,EAAIC,EAAID,EAAIV,c,2DC3EjC,SAASqB,EAAkBC,EAAaC,EAAMC,GAC5C,IAAMC,EAAK,2BACNH,GADM,IAETC,OACAC,QAEF,MAAQ,oCAAsCrJ,IAAEuJ,OAC9CD,GACA,SAACE,EAAQ1I,EAAO2I,GAAhB,OAAwBD,EAAM,UAAOE,mBAAmBD,GAA1B,YAAkCC,mBAAmB5I,GAArD,OAC9B,IACA6I,MAAM,GAAI,GAGC,kBAAyK,IAAtKpI,EAAqK,EAArKA,KAAM7B,EAA+J,EAA/JA,uBAAwBP,EAAuI,EAAvIA,OAAQkB,EAA+H,EAA/HA,SAAUV,EAAqH,EAArHA,SAAUiK,EAA2G,EAA3GA,QAASC,EAAkG,EAAlGA,gBAAiBxK,EAAiF,EAAjFA,cAAeC,EAAkE,EAAlEA,iBAAkB6J,EAAgD,EAAhDA,YAAaW,EAAmC,EAAnCA,eAAgBC,EAAmB,EAAnBA,aAChK,EAA8BC,mBAAS3J,EAAWA,EAAS4J,QAAU,MAArE,mBAAOA,EAAP,KAAgBC,EAAhB,KAEA,OAAO,eAACC,EAAA,EAAD,CAAO5I,KAAMA,EAAM6I,OAAQR,EAA3B,UACL,cAACO,EAAA,EAAMjJ,OAAP,CAAcmJ,aAAW,EAAzB,SACE,cAACF,EAAA,EAAMG,MAAP,UAEInL,GAAU,gCACR,cAAC,IAAD,CAAiBoD,KAAM,CAAC,MAAO,eADvB,SAEPpD,EAAOmE,YAFA,SAINjD,GACE,eAACwC,EAAA,EAAD,CAAQC,QAAQ,UAAUC,KAAK,KAAKZ,QAAS,SAAAC,GAAOA,EAAEC,kBAAmB/C,EAAiBH,IAA1F,UACE,cAAC,IAAD,CAAiBoD,KAAM,CAAC,MAAO,UADjC,4CAQZ,cAAC4H,EAAA,EAAMI,KAAP,UAEIpL,GAAU,gCACR,qBAAKsC,UAAW,uBAAyBsI,EAAzC,SACE,sBAAKtI,UAAW,+BAAiCtC,EAAOmH,YAAxD,UACE,cAACkE,EAAA,EAAD,CAAO9D,IAAKvH,EAAOwH,UAAW/F,MAAO,CAAEsH,OAAQ7H,EAAW,iBAAmB,UAG3ElB,EAAO2C,WACL,uBAAML,UAAU,QAAhB,UAAyBtC,EAAO2C,UAAU,uBAAM3C,EAAOqE,UAAUoD,QAAQ,IAAK,aAKtF,uBAEElH,GACE,8BAEIW,EACM,gCAEIV,EAASR,EAAOiB,WACZ,eAACyC,EAAA,EAAD,CAAQ4H,OAAK,EAAC3H,QAAQ,UAAtB,UACE,cAAC,IAAD,CAAiBP,KAAM,CAAC,MAAO,WAAYS,MAAI,EAACC,OAAO,IADzD,yBAGA,eAACJ,EAAA,EAAD,CAAQ4H,OAAK,EAAC3H,QAAQ,SAASX,QAAS,kBAAM7C,EAAiBH,IAA/D,UACE,cAAC,IAAD,CAAiBoD,KAAM,CAAC,MAAO,WADjC,yEAIN,uBACA,eAACmI,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAhC,SACE,cAACC,EAAA,EAAD,CACEC,eAAe,WACfzK,YAAY,iEACZM,MAAOmJ,GAAW,GAClBvJ,SAAU,SAAA0B,GAAC,OAAI8H,EAAW9H,EAAEpB,OAAOF,YAEvC,cAAC6J,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAhC,SACE,eAAClI,EAAA,EAAD,CAAQpB,UAAU,gCAAgCgJ,OAAK,EAAC3H,QAAQ,UAAUX,QAAS,kBAAM0H,EAAgB1K,EAAQ8K,IAAjH,UACE,cAAC,IAAD,CAAiB1H,KAAM,CAAC,MAAO,cADjC,mDAMN5C,EAASR,EAAOiB,WACZ,eAACyC,EAAA,EAAD,CAAQ4H,OAAK,EAAC3H,QAAQ,UAAtB,UACE,cAAC,IAAD,CAAiBP,KAAM,CAAC,MAAO,WAAYS,MAAI,EAACC,OAAO,IADzD,yBAGA,eAACJ,EAAA,EAAD,CAAQ4H,OAAK,EAAC3H,QAAQ,UAAUX,QAAS,kBAAM9C,EAAcF,IAA7D,UACE,cAAC,IAAD,CAAiBoD,KAAM,CAAC,MAAO,UADjC,qEAMlB,uBAEA,oBAAId,UAAU,cAAd,wDACA,eAACkC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAG,GAAd,UACI,qBAAIpC,UAAU,cAAd,UAEItC,EAAO2C,WACL,+BAAI,eAACkC,EAAA,EAAD,CAAOlB,QAAQ,UAAf,UAA0B3D,EAAO2C,UAAjC,IAA6C3C,EAAOqE,aAAxD,UAEJ,+BAAKrE,EAAOmE,YAAZ,KAA2BnE,EAAOoE,QAAlC,UAGApE,EAAO+L,WACL,qBAAIzJ,UAAU,cAAd,UACE,6BACE,eAACuC,EAAA,EAAD,CAAOC,MAAI,EAACJ,GAAG,YAAf,UAA2B,cAAC,IAAD,CAAiBtB,KAAM,CAAC,MAAO,aAA1D,cAEF,6BACE,mBAAGL,KAAM/C,EAAO+L,UAAWlK,OAAO,SAASsB,IAAI,sBAA/C,SAAsEnD,EAAO+L,iBAKnF/L,EAAOgM,UACP,qBAAI1J,UAAU,cAAd,UACA,6BACI,eAACuC,EAAA,EAAD,CAAOC,MAAI,EAACJ,GAAG,YAAf,UAA2B,cAAC,IAAD,CAAiBtB,KAAM,CAAC,MAAO,UAA1D,YAEF,6BACE,mBAAGL,KAAM/C,EAAOgM,SAAUnK,OAAO,SAASsB,IAAI,sBAA9C,SAAqEnD,EAAOgM,gBAKhFhM,EAAOiM,YACP,qBAAI3J,UAAU,cAAd,UACE,6BACA,cAACuC,EAAA,EAAD,CAAOC,MAAI,EAACnB,QAAQ,YAApB,6BAEA,6BACI,mBAAGZ,KAAM,uBAAyB/C,EAAOiM,WAAYpK,OAAO,SAASsB,IAAI,sBAAzE,SAAgGnD,EAAOiM,qBAMnH,oBAAI3J,UAAU,mBAAd,oEACA,eAACkC,EAAA,EAAD,CAAMC,MAAI,EAAV,UACE,mBAAGhD,MAAO,CAAEyK,WAAY,OAAxB,SACElM,EAAOuE,eACHvE,EAAOuE,eAAekE,MAAM,MAAM/F,KAAI,SAAAkH,GAAC,OAAI,qBAAKnI,MAAO,CAAE0K,SAAU,cAAxB,SAAyCvC,OACpF,cAAC/E,EAAA,EAAD,CAAOH,GAAG,YAAV,kFAIJ1E,EAAOsE,YACH,mBAAGvB,KAAM/C,EAAOsE,YAAazC,OAAO,SAASsB,IAAI,sBAAjD,SAAwEnD,EAAOsE,cAC/E,cAACO,EAAA,EAAD,CAAOH,GAAG,YAAV,6EAIN1E,GACE,eAAC0D,EAAA,EAAD,CACI4H,OAAK,EACLhJ,UAAU,OACVqB,QAAQ,UACRC,KAAK,QACLb,KAAMgH,EACFC,EACA,UAAGW,EAAH,MAAwB3K,EAAO2C,WAAa3C,EAAOqE,UAA3B,gBAA2CrE,EAAO2C,UAAlD,YAA+D3C,EAAOqE,UAAtE,WAAsF,IAA9G,UACKrE,EAAOmE,YADZ,iEAEAiI,OAAOC,SAAStJ,MAEpBlB,OAAO,SAXX,UAYE,cAAC,IAAD,CAAiBuB,KAAM,CAAC,MAAO,aAZjC,IAYiD,IAZjD,4JAkBV,cAAC4H,EAAA,EAAMsB,OAAP,UACE,cAAC5I,EAAA,EAAD,CAAQ4H,OAAK,EAAC3H,QAAQ,UAAUX,QAASyH,EAAzC,sC,8CC1KO,eAAuD,IAApDrI,EAAmD,EAAnDA,KAAMuC,EAA6C,EAA7CA,OAAQ4H,EAAqC,EAArCA,GAAIC,EAAiC,EAAjCA,kBAAmB/B,EAAc,EAAdA,QACnD,IAAK9F,EACH,OAAO,wBAGT,IAAMwF,EAAQ,IAAIiC,OAAOK,gBAAgBL,OAAOC,SAASK,QACnDC,EAAYP,OAAOC,SAASO,QAC7BR,OAAOC,SAASQ,MAAQ,IADX,aAER1C,EAAM2C,IAAI,MAFF,cAGPP,EAAKA,EAAGQ,YAAc,IAEjC,OAAO,eAAC/B,EAAA,EAAD,CAAO5I,KAAMA,EAAM6I,OAAQR,EAA3B,UACL,cAACO,EAAA,EAAMjJ,OAAP,CAAcmJ,aAAW,EAAzB,SACE,eAACF,EAAA,EAAMG,MAAP,WACE,cAAC,IAAD,CAAiB/H,KAAM,CAAC,MAAO,UADjC,iFAIF,eAAC4H,EAAA,EAAMI,KAAP,WACE,eAAC5G,EAAA,EAAD,WACE,cAACA,EAAA,EAAKzC,OAAN,UACE,gCACE,gGADF,WAGE,eAACiL,EAAA,EAAD,CAAmBxL,KAAK,QAAQyL,KAAK,UAAUC,aAAcvI,EAAOwI,OAAS,YAAc,eAA3F,UACE,eAACC,EAAA,EAAD,CACIpK,QAASwJ,EAAkBrH,KAAK,IAAM,GACtCxD,MAAO,YACPgC,QAAQ,kBAHZ,UAG+BgB,EAAOwI,OAHtC,kBAIA,cAACC,EAAA,EAAD,CACIpK,QAASwJ,EAAkBrH,KAAK,IAAM,GACtCxD,MAAO,eACPgC,QAAQ,oBAHZ,wCAON,cAACa,EAAA,EAAK4G,KAAN,UACE,8BAEIzG,EAAOwI,OACH,qFACW,cAACtI,EAAA,EAAD,CAAOH,GAAG,UAAV,0BADX,gEAEE,uBAAK,uBACL,qGAEE,cAAC,IAAD,CAAiBuF,KAAM0C,EAAvB,SACE,eAACjJ,EAAA,EAAD,CAAQC,QAAQ,UAAUC,KAAK,KAA/B,UAAoC,cAAC,IAAD,CAAiBR,KAAM,CAAC,MAAO,UAAnE,8EAGJ,4BAAG,mBAAGL,KAAM4J,EAAW9K,OAAO,SAASsB,IAAI,sBAAxC,SAA+DwJ,SAEpE,qFAAe,cAAC9H,EAAA,EAAD,CAAOH,GAAG,YAAV,gCAAf,0EAKZ,+BACE,kUACA,sKACA,wOAGJ,cAACsG,EAAA,EAAMsB,OAAP,UACE,cAAC5I,EAAA,EAAD,CAAQ4H,OAAK,EAAC3H,QAAQ,UAAUX,QAASyH,EAAzC,sCChEO,eAA0D,IAAvDrI,EAAsD,EAAtDA,KAAM5B,EAAgD,EAAhDA,SAAU6M,EAAsC,EAAtCA,aAAc5C,EAAwB,EAAxBA,QAAS6C,EAAe,EAAfA,SACrD,OAAO,eAACtC,EAAA,EAAD,CAAO5I,KAAMA,EAAM6I,OAAQR,EAA3B,UACL,cAACO,EAAA,EAAMjJ,OAAP,CAAcmJ,aAAW,EAAzB,SACE,eAACF,EAAA,EAAMG,MAAP,WACE,cAAC,IAAD,CAAiB/H,KAAM,CAAC,MAAO,YADjC,6FAIF,eAAC4H,EAAA,EAAMI,KAAP,WAEIiC,GACA,cAAC3J,EAAA,EAAD,CAAQ4H,OAAK,EAAC3H,QAAQ,kBAAkBC,KAAK,KAA7C,SACE,oBAAGb,KAAMsK,EAAT,UAAuB,cAAC,IAAD,CAAiBjK,KAAM,CAAC,MAAO,mBAAtD,8FAIF5C,EAAS+M,QACP,eAAC7J,EAAA,EAAD,CAAQ4H,OAAK,EAAC3H,QAAQ,UAAUC,KAAK,KAArC,UACE,cAAC,IAAD,CAAiBR,KAAM,CAAC,MAAO,WAAYS,MAAI,EAACC,OAAO,IADzD,0BAKDtD,EAAS+M,SAAWF,GAAgB,eAAC3J,EAAA,EAAD,CAAQ4H,OAAK,EAAC3H,QAAQ,UAAUC,KAAK,KAAKZ,QAASsK,EAAnD,UACnC,cAAC,IAAD,CAAiBlK,KAAM,CAAC,MAAO,cADI,kFAKzC,cAAC4H,EAAA,EAAMsB,OAAP,UACE,cAAC5I,EAAA,EAAD,CAAQ4H,OAAK,EAAC3H,QAAQ,UAAUX,QAASyH,EAAzC,sC,qBCOR+C,IAAQC,IAAIC,IAAKC,IAAKC,K,IAEhBC,G,kDACJ,WAAYjO,EAAOC,GAAU,IAAD,8BAC1B,cAAMD,EAAOC,IAERC,MAAQ,CACTc,WAAa,GACb2H,UAAa,GACbuF,YAAa,GACbjI,QAAa,GAEbkI,qBAAqB,EACrBC,qBAAqB,EACrBC,0BAA0B,EAE1BC,WAAa,KACb3B,GAAI,KACJ5H,OAAQ,KACRwF,MAAO,KAEPxJ,eAAgB,KAChBF,gBAAiB,KACjBiC,IAAK,KACLyL,eAAgB,KAChBzN,iBAAiB,EACjB0N,oBAAoB,GAGxB,EAAKC,SAAW,4CAEhB,EAAKC,oBAA2B,EAAKA,oBAAoBnJ,KAAzB,gBAChC,EAAKoJ,qBAA2B,EAAKA,qBAAqBpJ,KAA1B,gBAChC,EAAKnB,YAA2B,EAAKA,YAAYmB,KAAjB,gBAChC,EAAKpB,eAA2B,EAAKA,eAAeoB,KAApB,gBAChC,EAAKqJ,sBAA2B,EAAKA,sBAAsBrJ,KAA3B,gBAChC,EAAKsJ,wBAA2B,EAAKA,wBAAwBtJ,KAA7B,gBAChC,EAAKuJ,MAA2B,EAAKA,MAAMvJ,KAAX,gBAChC,EAAKwJ,OAA2B,EAAKA,OAAOxJ,KAAZ,gBAChC,EAAKyJ,WAA2B,EAAKA,WAAWzJ,KAAhB,gBAChC,EAAK0J,cAA2B,EAAKA,cAAc1J,KAAnB,gBAChC,EAAK2J,gBAA2B,EAAKA,gBAAgB3J,KAArB,gBAEhC,EAAK4J,oBAA+B,EAAKA,oBAAoB5J,KAAzB,gBACpC,EAAK6J,qBAA+B,EAAKA,qBAAqB7J,KAA1B,gBACpC,EAAK8J,yBAA+B,EAAKA,yBAAyB9J,KAA9B,gBACpC,EAAK+J,0BAA+B,EAAKA,0BAA0B/J,KAA/B,gBACpC,EAAKgK,6BAA+B,EAAKA,6BAA6BhK,KAAlC,gBAEpC,EAAKiK,cAAqB,EAAKA,cAAcjK,KAAnB,gBAC1B,EAAKkK,YAAqB,EAAKA,YAAYlK,KAAjB,gBAC1B,EAAKmK,kBAAqB,EAAKA,kBAAkBnK,KAAvB,gBAhDA,E,oDAmD5B,SAAiBoK,EAAMC,GAAY,IAAD,OAC1BC,EAAQC,aAAaC,QAAQ,SAEnC,OAAKF,GAEDD,GAAWvP,KAAK2O,WAAWY,GAExBI,MAAM3P,KAAKoO,SAAW,WAAY,CACvCwB,QAAS,IAAIC,QAAQ,CAAE,cAAiB,UAAYL,IACpDM,OAAQ,OACRtL,KAAMuL,KAAKC,UAAUV,GACrBW,MAAM,IAEPC,MAAK,SAAA5K,GAAI,OAAIA,EAAK6K,UAClBC,OAAM,SAAAC,GACLC,MAAM,8RAAD,OAAoDD,EAApD,SAGNH,MAAK,SAAA5K,GAGJ,GAFIiK,GAAW,EAAKX,cAAcW,IAE9BjK,IAAQA,EAAKiL,OAAyB,YAAfjL,EAAKiL,OAAsC,kBAAfjL,EAAKiL,MAA5D,CAIA,IAAIjL,IAAQA,EAAKiL,MAKjB,OAAOjL,EAJLgL,MAAM,0SAAD,OAAsDhB,EAAKkB,QAA3D,aAAuElL,EAAKiL,MAA5E,WAvBUE,QAAQC,OAAO,qC,wBA+BpC,SAAWrG,GACT,IAAQzE,EAAY5F,KAAKH,MAAjB+F,QACRA,EAAQyE,GAAO,EACfrK,KAAKsG,SAAS,CAAEV,c,2BAGlB,SAAcyE,GACZ,IAAQzE,EAAY5F,KAAKH,MAAjB+F,eACDA,EAAQyE,GACfrK,KAAKsG,SAAS,CAAEV,c,uCAGlB,SAA0BjG,GACxB,IACMqB,EADQ,IAAIwL,gBAAgB7M,EAAMyM,SAASK,QACzBI,IAAI,aACtB9M,EAASC,KAAKH,MAAMc,WAAWU,QAAO,SAAAN,GAAC,OAAIA,EAAEC,YAAcA,KAAW,GAExEjB,EACFC,KAAKsG,SAAS,CAAE4H,eAAgBnO,EAAQ+N,qBAAqB,IAE7D9N,KAAKsG,SAAS,CAAEwH,qBAAqB,M,+BAIzC,WAAqB,IAAD,OAEZG,EADQ,IAAI9B,OAAOK,gBAAgBL,OAAOC,SAASK,QAChCI,IAAI,KAG7BV,OAAOwD,MAAP,UAAgBxD,OAAOC,SAASO,OAAhC,YAA0CsB,EAA1C,SAA6D,CAAE0C,YAAa,YACzET,MAAK,SAAA5K,GAAI,OAAIA,EAAK6K,UAClBD,MAAK,SAAA5K,GACJ,EAAKgB,SAAS,CAAE4D,MAAO5E,OAExB8K,OAAM,SAAAC,GACLO,QAAQC,IAAI,iDACZ,EAAKvK,SAAS,CAAE4D,MAAO,QAExBgG,KAAKlQ,KAAKmP,eACVe,MAAK,SAAA5K,GACJ,GAAK,EAAKzF,MAAMY,gBAAhB,CAKA,IAAMyJ,EAAQ,IAAIsC,gBAAgBL,OAAOC,SAASK,QAElD,OAAKvC,EAAM2C,IAAI,MACN4D,QAAQK,QAAQ5G,EAAM2C,IAAI,OAC9BqD,KAAK,EAAKb,mBACVa,KAAK,EAAKd,aAEN,EAAKA,cAXZwB,QAAQC,IAAI,kB,+BAgBpB,SAAkBlM,GAAY,IAAD,OACnBsJ,EAAejO,KAAKH,MAApBoO,WAER,OAAO0B,MAAM,GAAD,OAAI3P,KAAKoO,SAAT,mBAA4BH,EAAW5I,GAAvC,iBAAkDV,GAAa,CAAEsL,MAAM,IAChFC,MAAK,SAAA5K,GAAI,OAAIA,EAAK6K,UAClBD,MAAK,SAAA5K,GACJ,IAAKA,EAAKrE,SAGR,OAFA2P,QAAQC,IAAI,2BAA4BlM,QACxC2L,MAAM,GAAD,OAAI3L,EAAJ,gMAIPiM,QAAQC,IAAI,2BAA4BlM,EAAWW,EAAKrE,SAAS+D,QACjE,IARY,EAQN9D,EAAM,GARA,cASIoE,EAAKrE,UATT,IASZ,2BAA+B,CAAC,IAArBmE,EAAoB,QAC7BlE,EAAIkE,EAAEpE,WAAaoE,GAVT,8BAaZ,EAAKkB,SAAS,CAAE9F,gBAAiB,CAAEU,MAAKwD,OAAQY,EAAKZ,aAEtD0L,OAAM,SAAAC,GACLO,QAAQC,IAAI,mCAAoCR,Q,2BAItD,WAAiB,IAAD,OAERpC,EADQ,IAAIzB,gBAAgBJ,SAASK,QAClBI,IAAI,KAE7B,OADA7M,KAAK2O,WAAW,UACTgB,MAAM,mCAAqC1B,EAAa,SAC5DiC,MAAK,SAAA5K,GAAI,OAAIA,EAAKyL,GAAKzL,EAAOmL,QAAQC,OAAOpL,MAC7C4K,MAAK,SAAA5K,GAAI,OAAIA,EAAK6K,UAClBD,MAAK,SAAA5K,GACJ,EAAKsJ,cAAc,UACnBgC,QAAQC,IAAI,kBAAmBvL,EAAKxE,QAAQkE,QAC5C,IAHY,EAcRgM,EAXEvQ,EAAkF,IAAhE6E,EAAKxE,QAAQO,QAAO,SAAAN,GAAC,OAAIA,EAAE2B,WAAa3B,EAAEqD,aAAWY,OAEzErE,EAAa2E,EAAKxE,QALV,cAQIH,GARJ,IAQZ,2BAA4B,CAAC,IAAlBI,EAAiB,QACrBA,EAAEwG,YACLxG,EAAEwG,UAAF,WAAkB0G,EAAlB,+BAAmDlN,EAAEC,aAV7C,8BAeZ,GAAIsE,EAAK2L,WAAY,CACnB,IAAMC,EAAUtQ,IAAEuQ,UAAU7L,EAAK2L,WAAYrQ,IAAEwQ,MAAM9L,EAAK2L,WAAWjM,SACrEgM,EAAS,SAACxK,EAAEC,GACV,OAAIyK,EAAQ1K,KAAO0K,EAAQzK,GAClB,GAEJyK,EAAQ1K,IAAM0K,EAAQzK,IACjB,EAENyK,EAAQ1K,GAAK0K,EAAQzK,GAChB,EAELyK,EAAQ1K,GAAK0K,EAAQzK,IACf,EAEH,GAGT9F,EAAaA,EAAW0Q,MAAK,SAAC7K,EAAEC,GAC9B,IAAM9D,EAAMqO,EAAOxK,EAAE9D,UAAW+D,EAAE/D,WAClC,OAAY,IAARC,EAAkBA,EAElB6D,EAAEpC,UAAYqC,EAAErC,UACX,EAELoC,EAAEpC,UAAYqC,EAAErC,WACV,EAEH,KAIX,EAAKkC,SAAS,CACZ3F,aACAD,eAAgBsQ,EAChB/C,WAAY3I,EAAK2I,WACjBxL,IAAK6C,EAAK7C,IACVhC,oBAEF,EAAK6Q,0BAA0B,EAAK3R,UAErCyQ,OAAM,SAAAC,GAEL,EAAK/J,SAAS,CAAE3F,WAAY,OAC5BiQ,QAAQL,MAAM,SAAUtC,EAAa,QAASoC,EAAIkB,a,yBAIxD,WAAe,IAAD,OACJtD,EAAejO,KAAKH,MAApBoO,WAER,OAAOjO,KAAKwR,iBAAiB,CAAEhB,QAAS,OAAQiB,cAAexD,EAAW5I,IAAM,QAAQ6K,MAAK,SAAA5K,GAC3F,GAAKA,EAAL,CACAsL,QAAQC,IAAI,oBAAqBvL,EAAKrE,SAAS+D,QAE/C,IAJmG,EAI7F6I,EAAc,GAJ+E,cAKnFvI,EAAKrE,UAL8E,IAKnG,2BAA+B,CAAC,IAArBmE,EAAoB,QAC7ByI,EAAYzI,EAAEpE,WAAaoE,GANsE,8BASnG,EAAKkB,SAAS,CAAEuH,cAAanJ,OAAQY,EAAKZ,OAAQ4H,GAAIhH,EAAK9B,a,mBAI/D,WAAS,IAAD,OAQN2I,OAAOuF,KAAK1R,KAAKoO,SAAW,cAC5BjC,OAAOwF,iBAAiB,WARJ,SAAAhQ,GACQ,kBAAfA,EAAM2D,OACfmK,aAAamC,QAAQ,QAASjQ,EAAM2D,MACpC,EAAK8J,kBAKuC,K,oBAGlD,WACEK,aAAaoC,QACb7R,KAAKsG,SAAS,CAAEgG,GAAI,KAAMuB,YAAa,O,iCAGzC,SAAoBK,GAClB,IAAMhE,EAAQ,IAAIsC,gBAAgBJ,SAASK,QAC3CvC,EAAM4H,OAAO,YAAa5D,EAAelN,WACzChB,KAAKL,MAAMoS,QAAQC,KAAK,IAAM9H,EAAM+H,c,kCAGtC,WACE,IAAM/H,EAAQ,IAAIsC,gBAAgBJ,SAASK,QAC3CvC,EAAMgI,OAAO,aACblS,KAAKL,MAAMoS,QAAQC,KAAK,IAAM9H,EAAM+H,c,iCAGtC,WACEjS,KAAKsG,SAAS,CAAEyH,qBAAqB,M,kCAGvC,WACE/N,KAAKsG,SAAS,CAAEyH,qBAAqB,M,sCAGvC,WACE/N,KAAKsG,SAAS,CAAE0H,0BAA0B,M,uCAG5C,WACEhO,KAAKsG,SAAS,CAAE0H,0BAA0B,M,yBAG5C,SAAYjO,GAAS,IAAD,OAClB,EAAoCC,KAAKH,MAAjCgO,EAAR,EAAQA,YAAaI,EAArB,EAAqBA,WAErB,OAAOjO,KAAKwR,iBAAiB,CAAEhB,QAAS,MAAOiB,cAAexD,EAAW5I,GAAIrE,UAAWjB,EAAOiB,WAAajB,EAAOiB,WAAWkP,MAAK,SAAA5K,GAC5HA,IAGLuI,EAAY9N,EAAOiB,WAAasE,EAChC,EAAKgB,SAAS,CAAEuH,sB,4BAIpB,SAAe9N,GAAS,IAAD,OACb8N,EAAgB7N,KAAKH,MAArBgO,YAER7N,KAAKwR,iBAAiB,CAAEhB,QAAS,SAAUxP,UAAWjB,EAAOiB,WAAajB,EAAOiB,WAAWkP,MAAK,SAAA5K,GAC1FA,WAGEuI,EAAY9N,EAAOiB,WAC1B,EAAKsF,SAAS,CAAEuH,sB,mCAIpB,SAAsB9N,EAAO8K,GAAU,IAAD,OAC5BgD,EAAgB7N,KAAKH,MAArBgO,YAER7N,KAAKwR,iBAAiB,CAAEhB,QAAS,SAAUxP,UAAWjB,EAAOiB,UAAW6J,QAASA,GAAW9K,EAAOiB,WAAWkP,MAAK,SAAA5K,GAC5GA,IAELsL,QAAQC,IAAI,kBAAmBvL,GACnBuI,EAAY9N,EAAOiB,WAC3B6J,QAAUA,EACd,EAAKvE,SAAS,CAAEuH,sB,qCAIpB,SAAwBsE,GAAW,IAAD,OACxBlE,EAAejO,KAAKH,MAApBoO,WAERjO,KAAKwR,iBAAiB,CAAEhB,QAAS,SAAUiB,cAAexD,EAAW5I,GAAI6H,OAAQiF,IAAYjC,MAAK,SAAA5K,GAC3FA,IAELsL,QAAQC,IAAI,qBAAsBvL,GAClC,EAAKgB,SAAS,CAAE5B,OAAQ,CAAEwI,OAAQiF,W,0CAItC,WACEnS,KAAKsG,SAAS,CAAE9F,gBAAiB,S,6BAGnC,WAAmB,IAAD,OACRyN,EAAejO,KAAKH,MAApBoO,WACRjO,KAAKwR,iBAAiB,CAAEhB,QAAS,SAAUiB,cAAexD,EAAW5I,IAAM,UAAU6K,MAAK,SAAA5K,GACxFsL,QAAQC,IAAI,mBAAoBvL,GAChC,EAAKgB,SAAS,CAAE6H,mBAAoB7I,EAAK2E,W,oBAI7C,WACE,MAIIjK,KAAKH,MAHPc,EADF,EACEA,WAAYkN,EADd,EACcA,YAAajI,EAD3B,EAC2BA,QACzBkI,EAFF,EAEEA,oBAAqBC,EAFvB,EAEuBA,oBAAqBC,EAF5C,EAE4CA,yBAA0BxN,EAFtE,EAEsEA,gBAAiB2N,EAFvF,EAEuFA,mBACrFD,EAHF,EAGEA,eAAgB5B,EAHlB,EAGkBA,GAAI5H,EAHtB,EAGsBA,OAAQuJ,EAH9B,EAG8BA,WAAYxN,EAH1C,EAG0CA,gBAAiBC,EAH3D,EAG2DA,eAAgBwJ,EAH3E,EAG2EA,MAG3E,OAAIvJ,aAAsByR,OAA+B,IAAtBzR,EAAWqE,OACrC,qBAAK3C,UAAU,wBAAf,SACL,uIAIC1B,EAQE,sBAAK0B,UAAW,gBAAkB4L,EAAW5I,GAA7C,UACL,uBACA,cAACd,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAG,QAAd,SACE,+BAEIwJ,EACI,qCAAQA,EAAWoE,gBAAnB,yCAA2C,cAACzN,EAAA,EAAD,CAAOC,MAAI,EAACnB,QAAQ,YAApB,SAAiC/C,EAAWqE,YACvF,2CAqDV,cAACsN,EAAA,EAAIC,UAAL,CAAelN,GAAG,gBAAgBmN,iBAAiB,YAAnD,SACE,sBAAKnQ,UAAU,OAAf,UACE,eAACoQ,EAAA,EAAD,CAAK/O,QAAQ,QAAb,UACE,cAAC+O,EAAA,EAAIC,KAAL,UACE,eAACD,EAAA,EAAIE,KAAL,CAAUC,SAAS,OAAnB,UAA0B,cAAC,IAAD,CAAiBzP,KAAM,CAAC,MAAO,UAAzD,uCAEF,cAACsP,EAAA,EAAIC,KAAL,UACE,eAACD,EAAA,EAAIE,KAAL,CAAUC,SAAS,YAAnB,UAA+B,cAAC,IAAD,CAAiBzP,KAAM,CAAC,MAAO,YAA9D,mDAGA+G,EAAMzH,KACJ,cAACgQ,EAAA,EAAIC,KAAL,UACE,eAACD,EAAA,EAAIE,KAAL,CAAUC,SAAS,MAAnB,UAAyB,cAAC,IAAD,CAAiBzP,KAAM,CAAC,MAAO,oBAAxD,8BAUR,eAACmP,EAAA,EAAIO,QAAL,WACE,cAACP,EAAA,EAAIQ,KAAL,CAAUF,SAAS,OAAnB,SACE,cAAC,EAAD,CACE9R,QAASH,EACTN,UAAWwN,EACXrN,gBAAiBA,EACjBD,SAAUqF,EACVzF,WAAYH,KAAKqO,oBACjBpO,cAAeD,KAAK+D,YACpB7D,iBAAkBF,KAAK8D,eACvB1D,wBAAyBJ,KAAKkP,6BAC9B5O,yBAA0BgM,EAC1B7L,gBAAiBA,EACjBC,eAAgBA,MAEpB,cAAC4R,EAAA,EAAIQ,KAAL,CAAUF,SAAS,YAAnB,SACE,cAAC,EAAD,CACE9R,QAASH,EACTN,UAAWwN,EACXtN,SAAUqF,EACVoB,aAAchH,KAAKqO,oBACnBpO,cAAeD,KAAK+D,YACpB7D,iBAAkBF,KAAK8D,eACvBxD,yBAA0BgM,EAC1B5L,eAAgBA,MAGlBD,GACE,cAAC6R,EAAA,EAAIQ,KAAL,CAAUF,SAAS,WAAnB,SACE,cAAC,EAAD,CACE9R,QAASH,EACTN,UAAWwN,EACX1N,WAAYH,KAAKqO,oBACjB3N,eAAgBA,MAItBwJ,EAAMzH,KACJ,cAAC6P,EAAA,EAAIQ,KAAL,CAAUF,SAAS,MAAnB,SACE,cAAC,EAAD,CACEzK,MAAK,WAAM8F,EAAW5I,GAAjB,YACL+C,KAAM8B,EAAMzH,IACZ3B,QAASH,EACTN,UAAWwN,EACXxF,cAAerI,KAAKqO,gCAOlC,cAAC0E,EAAD,CACE5Q,KAAM2L,EACN/N,OAAQmO,EACRjN,SAAUiN,EAAiBL,EAAYK,EAAelN,WAAa,KACnET,SAAUqF,EACV4E,QAASxK,KAAKsO,qBACd7D,gBAAiBzK,KAAKuO,sBACtBtO,cAAeD,KAAK+D,YACpB7D,iBAAkBF,KAAK8D,eACvBxD,yBAA0BgM,EAC1BvC,YAAaG,EAAM8I,MACnBtI,eAAgBuD,EAAWoE,gBAC3B1H,aAAcsD,EAAW5I,KAE3B,cAAC4N,GAAD,CACE9Q,KAAM4L,EACNzB,GAAIA,EACJ5H,OAAQA,EACR6H,kBAAmBvM,KAAKwO,wBACxBhE,QAASxK,KAAK+O,uBAEhB,cAACmE,GAAD,CACE/Q,KAAM6L,EACNzN,SAAUqF,EACVwH,aAAce,EACd3D,QAASxK,KAAKiP,0BACd5B,SAAUrN,KAAK6O,qBAtKV,sBAAKxM,UAAU,wBAAf,UACL,+CACA,uBACA,yI,GAxXgBwE,IAAMC,WAiiBfqM,eAAWvF,IC7jBXwF,G,4JATb,WACE,OAAO,sBAAK/Q,UAAU,YAAf,UACL,uBACA,+CAFK,uH,GAFSwE,IAAMC,WCgBXuM,G,4JAZb,WACE,OAAO,cAAC,IAAD,UACL,8BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAAC1G,KAAK,IAAI2G,UAAWC,KACjC,cAAC,IAAD,CAAOD,UAAWH,gB,GANPvM,IAAMC,WCKP2M,QACW,cAA7BtH,OAAOC,SAASsH,UAEe,UAA7BvH,OAAOC,SAASsH,UAEhBvH,OAAOC,SAASsH,SAASC,MACvB,2D,qBCNNC,IAASC,OAAO,cAAC,GAAD,IAAYC,SAASC,eAAe,SDqG9C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhE,MAAK,SAAAiE,GACjCA,EAAaC,kB","file":"static/js/main.c00f06c1.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactTable from 'react-table-6';\nimport \"react-table-6/react-table.css\";\nimport _ from 'lodash';\nimport { Badge, Card, Button } from 'react-bootstrap';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nclass CircleListPane extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = { table: null };\n  }\n\n  addFavorite(circle) {\n    this.props.onAddFavorite(circle);\n  }\n\n  removeFavorite(circle) {\n    this.props.onRemoveFavorite(circle);\n  }\n\n  rowClick(circle) {\n    this.props.onRowClick(circle);\n  }\n\n  removePublicChecklist() {\n    this.props.onRemovePublicChecklist();\n  }\n\n  render() {\n    const { favorites, showChecklistComponent, loadings, publicChecklist, enableChecklist, spaceSymSorter } = this.props;\n    const { table } = this.state;\n    const circleList = _.cloneDeep(this.props.circles);\n\n    for (const c of circleList) {\n      if (favorites[c.circle_id]) {\n        c.favorite = favorites[c.circle_id];\n      }\n\n      if (publicChecklist && publicChecklist.idx[c.circle_id]) {\n        c.publicChecklist = publicChecklist.idx[c.circle_id];\n      }\n    }\n\n    function makePlaceholderFilter(placeholder) {\n      return ({filter, onChange}) => (\n        <input type='text'\n          placeholder={placeholder}\n          style={{\n            width: '100%'\n          }}\n          value={filter ? filter.value : ''}\n          onChange={(event) => onChange(event.target.value)}\n        />\n      );\n    }\n\n    const columns = [\n      {\n        Header: \"スペース\",\n        headerStyle: { backgroundColor: \"#222\", color: \"#fff\" },\n        columns: [\n          {\n            headerStyle: { backgroundColor: \"#ddd\" },\n            accessor: \"space_sym\",\n            width: 70,\n            show: enableChecklist,\n            resizable: false,\n            className: \"text-center\",\n            Header: \"記号\",\n            sortMethod: spaceSymSorter,\n            Filter: ({ filter, onChange }) =>\n              <select\n                onChange={event => onChange(event.target.value)}\n                style={{ width: \"100%\" }}\n                value={filter ? filter.value : \"all\"}>\n                <option value=\"\"></option>\n                {_.uniq(circleList.map(c => c.space_sym)).map(sym => <option key={sym} value={sym}>{sym}</option>)}\n              </select>\n          },{\n            headerStyle: { backgroundColor: \"#ddd\" },\n            accessor: \"space_num\",\n            width: 60,\n            show: enableChecklist,\n            resizable: false,\n            className: \"text-center\",\n            Header: \"番号\",\n            Filter: makePlaceholderFilter(),\n          }\n        ]\n      },\n      {\n        Header: \"サークル情報\",\n        headerStyle: { backgroundColor: \"#666\", color: \"#fff\" },\n        columns: [\n          {\n            headerStyle: { backgroundColor: \"#ddd\" },\n            accessor: \"circle_name\",\n            Header: \"サークル名\",\n            Filter: makePlaceholderFilter(\"(検索)\"),\n          },{\n            headerStyle: { backgroundColor: \"#ddd\" },\n            accessor: \"penname\",\n            width: 200,\n            Header: \"作者名\",\n            Filter: makePlaceholderFilter(\"(検索)\"),\n          },\n          {\n            headerStyle: { backgroundColor: \"#ddd\" },\n            accessor: \"twitter_id\",\n            className: \"text-center\",\n            width: 75,\n            show: enableChecklist,\n            resizable: false,\n            Header: \"Twitter\",\n            Cell: row => row.value\n                ? <a href={'https://twitter.com/' + row.value} onClick={e => { e.stopPropagation() }} target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={['fab', 'twitter']} /></a>\n                : \"\",\n            sortable: false,\n          },\n          {\n            headerStyle: { backgroundColor: \"#ddd\" },\n            accessor: \"circle_link\",\n            className: \"text-center\",\n            width: 75,\n            show: enableChecklist,\n            resizable: false,\n            Header: \"Web\",\n            Cell: row => row.value\n                ? <a href={row.value} onClick={e => { e.stopPropagation() }} target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={['fas', 'external-link-alt']} /></a>\n                : \"\",\n            sortable: false,\n          },\n          {\n            headerStyle: { backgroundColor: \"#ddd\" },\n            accessor: \"circle_comment\",\n            className: \"text-center\",\n            width: 100,\n            show: enableChecklist,\n            Header: \"お品書き\",\n            Filter: makePlaceholderFilter(\"(検索)\"),\n            Cell: row => row.value\n                ? <FontAwesomeIcon icon={['far', 'comment-dots']} />\n                : '',\n          }\n        ]\n      }\n    ];\n\n    if (showChecklistComponent) {\n      columns.unshift({\n        Header: <FontAwesomeIcon icon={['fas', 'star']} />,\n        headerStyle: { backgroundColor: \"#ff5\" },\n        columns: [\n          {\n            headerStyle: { backgroundColor: \"#ddd\" },\n            Header: \"\",\n            accessor: \"favorite\",\n            width: 70,\n            resizable: false,\n            filterable: false,\n            className: \"text-center\",\n            Cell: row => {\n              return loadings[row.original.circle_id] || loadings.user\n                ? <Button variant=\"warning\" size=\"xs\" style={{ width: \"60px\" }} onClick={e => { e.stopPropagation(); }}>\n                    <FontAwesomeIcon icon={['fas', 'spinner']} spin pulse={true} />\n                  </Button>\n                : row.original.favorite\n                  ? <Button variant=\"danger\" size=\"sm\" style={{ width: \"60px\" }} onClick={e => { e.stopPropagation(); this.removeFavorite(row.original); }}>\n                      <FontAwesomeIcon icon={['fas', 'star']} /> 削除\n                    </Button>\n                  : <Button variant=\"primary\" size=\"sm\" style={{ width: \"60px\" }} onClick={e => { e.stopPropagation(); this.addFavorite(row.original); }}>\n                      <FontAwesomeIcon icon={['far', 'star']} /> 追加\n                    </Button>\n            },\n          },\n        ],\n      });\n    }\n\n    if (publicChecklist) {\n      columns.unshift({\n        Header: <FontAwesomeIcon icon={['fas', 'check']} />,\n        headerStyle: { backgroundColor: \"#f44\", color: \"#fff\" },\n        columns: [\n          {\n            headerStyle: { backgroundColor: \"#ddd\", fontSize: \"12px\" },\n            accessor: \"publicChecklist\",\n            width: 30,\n            resizable: false,\n            filterable: false,\n            className: \"text-center\",\n            Cell: row => row.value\n                ? <FontAwesomeIcon icon={['fas', 'check']} />\n                : \"\"\n            ,\n          },\n        ],\n      });\n    }\n\n    const jp = {\n      circle_name: \"サークル名\",\n      penname:     \"作者\",\n      space_sym:   \"記号\",\n      space_num:   \"数字\",\n      circle_link: \"お品書きのリンク\",\n      circle_comment: \"お品書きのコメント\",\n    };\n\n    return <div>\n      {\n        publicChecklist &&\n          <Card body bg=\"light\" className=\"clearfix mt1e\">\n            <a href={\"https://twitter.com/\" + publicChecklist.config.member_id} target=\"_blank\" rel=\"noopener noreferrer\">\n              <FontAwesomeIcon icon={['fab', 'twitter']} />{publicChecklist.config.member_id}\n            </a>\n            &nbsp;さんのチェックリスト\n            &nbsp;<Badge pill bg=\"primary\">{Object.keys(publicChecklist.idx).length}</Badge>&nbsp;\n            を「<FontAwesomeIcon icon={['fas', 'check']} />」で表示しています。\n            <div className=\"pull-right\">\n              <Button variant=\"success\" size=\"sm\" onClick={this.removePublicChecklist.bind(this)}>\n                <FontAwesomeIcon icon={['fas', 'times']} /> 非表示にする\n              </Button>\n            </div>\n          </Card>\n      }\n      {\n        table &&\n        <div className=\"mt1e\">\n          {\n            table.filtered.length !== 0\n              ? <div>\n                  {table.filtered.map(f => <span key={f.id}><b>{jp[f.id]}</b>='{f.value}' </span>)} の検索結果\n                  (<b>{table.data.length}</b> サークル中 <b>{table.sortedData.length}</b> 件)\n                </div>\n              : <div className=\"text-muted\">\n                  <FontAwesomeIcon icon={['fas', 'info-circle']} /> テーブルの行をクリックすると詳細画面が開きます。\n                </div>\n          }\n        </div>\n      }\n      <ReactTable\n        filterable\n        className=\"-striped -highlight mt1e\"\n        pageSize={table && table.sortedData.length !== 0 ? table.sortedData.length : circleList.length}\n        showPageSizeOptions={false}\n        showPaginationTop={false}\n        showPaginationBottom={false}\n        loading={circleList.length === \"0\"}\n        columns={columns}\n        data={circleList}\n        defaultSorted={[ { id: 'space_sym' }, { id: 'space_num' } ]}\n        defaultFilterMethod={(filter, row, column) => {\n          const id = filter.pivotId || filter.id;\n          return row[id] !== undefined ? String(row[id]).indexOf(filter.value) !== -1 : false;\n        }}\n        onFetchData={(state, instance) => {\n          this.setState({ table: state });\n        }}\n        getTrProps={(a,b) => {\n          return {\n            style: { color: b && b.original && b.original.favorite ? \"red\" : \"\" },\n            onClick: () => { this.rowClick(b.original) }\n          };\n        }}\n        getTdProps={(a,b) => {\n          return {\n            style: { padding: \"3px 5px\" },\n          };\n        }}/>\n      <br/>\n    </div>;\n  }\n}\n\nCircleListPane.propTypes = {\n  circles: PropTypes.array.isRequired,\n  favorites: PropTypes.object.isRequired,\n  publicChecklist: PropTypes.object,\n  loadings: PropTypes.object.isRequired,\n  onRowClick: PropTypes.func.isRequired,\n  onAddFavorite: PropTypes.func.isRequired,\n  onRemoveFavorite: PropTypes.func.isRequired,\n  onRemovePublicChecklist: PropTypes.func.isRequired,\n  showChecklistComponent: PropTypes.bool,\n  enableChecklist: PropTypes.bool,\n  spaceSymSorter: PropTypes.func,\n};\n\nexport default CircleListPane;\n","import React from 'react';\nimport _ from 'lodash';\nimport { Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport LazyLoad from 'react-lazyload';\n\nfunction CirclecutPane({ circles, favorites, loadings, showChecklistComponent, onImageClick, onAddFavorite, onRemoveFavorite }) {\n  const circleList = _.cloneDeep(circles);\n\n  for (const c of circleList) {\n    if (favorites[c.circle_id]) {\n      c.favorite = favorites[c.circle_id];\n    }\n  }\n\n  return <div>\n    <div className=\"text-muted mt1e\">\n      <FontAwesomeIcon icon={['fas', 'info-circle']} /> 画像をクリックすると詳細画面が開きます。\n    </div>\n    <div className=\"circleCutWrapper\">\n      {\n        circleList.map(c => {\n          let spaceClass = (c.space_count === \"1\") ? 'space-normal' : 'space-wide';\n          if (c.favorite) spaceClass += ' is--favorite';\n\n          return (\n            <div\n              key={c.circlecut || c.circle_id}\n              className={spaceClass + \" circleCut-item\"}\n              onClick={() => onImageClick(c)}>\n              <div className=\"circleCut-image\">\n                <LazyLoad height={200} offset={0} once>\n                  <img\n                    src={c.circlecut ? c.circlecut.replace('http:', 'https:') : null}\n                    className=\"circleCut-img\"\n                    alt={c.circle_name}\n                  />\n                </LazyLoad>\n              </div>\n              <div className=\"circleCut-space\">\n                {c.space_sym}<br/>{c.space_num.replace('-', ',')}\n              </div>\n                <div className=\"circleCut-detail\">\n                  <div className=\"circleCut-name\">\n                    {c.circle_name}\n                  </div>\n                  {\n                    showChecklistComponent &&\n                    <div className=\"circleCut-favorite\">\n                      {\n                        loadings[c.circle_id]\n                          ? <Button variant=\"warning\" size=\"sm\" onClick={e => { e.stopPropagation(); }}>\n                            <FontAwesomeIcon icon={['fas', 'spinner']} spin pulse={true} /> 処理中\n                          </Button>\n                          : c.favorite\n                            ? <Button variant=\"danger\" size=\"sm\" onClick={e => { e.stopPropagation(); onRemoveFavorite(c) }}>\n                              <FontAwesomeIcon icon={['fas', 'star']} /> 削除\n                            </Button>\n                            : <Button variant=\"primary\" size=\"sm\" onClick={e => { e.stopPropagation(); onAddFavorite(c) }}>\n                              <FontAwesomeIcon icon={['far', 'star']} /> 追加\n                            </Button>\n                      }\n                    </div>\n                  }\n                </div>\n            </div>\n          );\n        })\n      }\n    </div>\n  </div>;\n}\n\nexport default CirclecutPane;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactTable from \"react-table-6\";\nimport _ from 'lodash';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nclass FavoriteListPane extends React.Component {\n  rowClick(circle) {\n    this.props.onRowClick(circle);\n  }\n\n  render() {\n    const { favorites, spaceSymSorter } = this.props;\n    const circleList = _.cloneDeep(this.props.circles);\n\n    for (const c of circleList) {\n      if (favorites[c.circle_id]) {\n        c.favorite = favorites[c.circle_id];\n      }\n    }\n\n    function makePlaceholderFilter(placeholder) {\n      return ({filter, onChange}) => (\n        <input type='text'\n          placeholder={placeholder}\n          style={{\n            width: '100%'\n          }}\n          value={filter ? filter.value : ''}\n          onChange={(event) => onChange(event.target.value)}\n        />\n      );\n    }\n\n    const filtered = circleList.filter(c => c.favorite);\n    const columns = [\n      {\n        Header: \"スペース\",\n        headerStyle: { backgroundColor: \"#222\", color: \"#fff\" },\n        columns: [\n          {\n            headerStyle: { backgroundColor: \"#ddd\" },\n            accessor: \"space_sym\",\n            width: 70,\n            resizable: false,\n            className: \"text-center\",\n            Header: \"記号\",\n            sortMethod: spaceSymSorter,\n            Filter: ({ filter, onChange }) =>\n                <select\n                    onChange={event => onChange(event.target.value)}\n                    style={{ width: \"100%\" }}\n                    value={filter ? filter.value : \"all\"}>\n                  <option value=\"\"></option>\n                  {_.uniq(circleList.map(c => c.space_sym)).map(sym => <option key={sym} value={sym}>{sym}</option>)}\n                </select>\n          },{\n            headerStyle: { backgroundColor: \"#ddd\" },\n            accessor: \"space_num\",\n            width: 60,\n            resizable: false,\n            className: \"text-center\",\n            Header: \"番号\",\n            Filter: makePlaceholderFilter(),\n          }\n        ]\n      },\n      {\n        Header: \"サークル情報\",\n        headerStyle: { backgroundColor: \"#666\", color: \"#fff\" },\n        columns: [\n          {\n            headerStyle: { backgroundColor: \"#ddd\" },\n            accessor: \"circle_name\",\n            Header: \"サークル名\",\n            Filter: makePlaceholderFilter(\"(検索)\"),\n          },{\n            headerStyle: { backgroundColor: \"#ddd\" },\n            accessor: \"penname\",\n            width: 200,\n            Header: \"作者名\",\n            Filter: makePlaceholderFilter(\"(検索)\"),\n          },\n          {\n            headerStyle: { backgroundColor: \"#ddd\" },\n            accessor: \"twitter_id\",\n            className: \"text-center\",\n            width: 75,\n            resizable: false,\n            Header: \"Twitter\",\n            Cell: row => row.value\n                ? <a href={'https://twitter.com/' + row.value} onClick={e => { e.stopPropagation() }} target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={['fab', 'twitter']} /></a>\n                : \"\",\n            sortable: false,\n          },\n          {\n            headerStyle: { backgroundColor: \"#ddd\" },\n            accessor: \"circle_link\",\n            className: \"text-center\",\n            width: 75,\n            resizable: false,\n            Header: \"Web\",\n            Cell: row => row.value\n                ? <a href={row.value} onClick={e => { e.stopPropagation() }} target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={['fas', 'external-link-alt']} /></a>\n                : \"\",\n            sortable: false,\n          },\n          {\n            headerStyle: { backgroundColor: \"#ddd\" },\n            accessor: \"circle_comment\",\n            className: \"text-center\",\n            width: 100,\n            Header: \"お品書き\",\n            Filter: makePlaceholderFilter(\"(検索)\"),\n            Cell: row => row.value\n                ? <FontAwesomeIcon icon={['far', 'comment-dots']} />\n                : '',\n          }\n        ]\n      }\n    ];\n\n    return <div>\n      <div className=\"text-muted mt1e\">\n        <FontAwesomeIcon icon={['fas', 'info-circle']} /> テーブルの行をクリックすると詳細画面が開きます。\n      </div>\n      <ReactTable\n        filterable\n        className=\"-striped -highlight mt1e\"\n        // pageSize={20}\n        pageSize={filtered.length}\n        showPageSizeOptions={false}\n        showPaginationTop={false}\n        showPaginationBottom={false}\n        loading={circleList.length === \"0\"}\n        columns={columns}\n        data={filtered}\n        defaultSorted={[ { id: 'space_sym' }, { id: 'space_num' } ]}\n        defaultFilterMethod={(filter, row, column) => {\n          const id = filter.pivotId || filter.id;\n          return row[id] !== undefined ? String(row[id]).indexOf(filter.value) !== -1 : false;\n        }}\n        getTrProps={(a,b) => {\n          return {\n            onClick: () => { this.rowClick(b.original) }\n          };\n        }}\n        getTdProps={(a,b) => {\n          return {\n            style: { padding: \"3px 5px\" },\n          };\n        }}/>\n      <br/>\n    </div>;\n  }\n}\n\nFavoriteListPane.propTypes = {\n  circles: PropTypes.array.isRequired,\n  favorites: PropTypes.object.isRequired,\n  onRowClick: PropTypes.func.isRequired,\n  spaceSymSorter: PropTypes.func,\n};\n\nexport default FavoriteListPane;\n","import React from 'react';\nimport { sprintf } from 'sprintf-js';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport styled from 'styled-components';\n\nconst CirclePositionElement = styled.div`\n  @keyframes pointerBlink {\n    0% {\n      opacity: 0.9;\n      transform: scale(1.8, 1.8);\n      border-radius: 50%;\n    }\n    99% {\n      border-radius: 0;\n    }\n    100% {\n      opacity: 0.5;\n      transform: scale(0.9, 0.9);\n      border-radius: 50%;\n    }\n  }\n\n  animation-name: ${props => props.blink ? 'pointerBlink' : ''};\n  animation-duration: 1s;\n  animation-iteration-count: infinite;\n\n  background-color: ${props => props.bgColor};\n  position: absolute;\n  width: ${props => props.width || 5}px;\n  height: ${props => props.height || 5}px;\n  top: ${props => props.top};\n  left: ${props => props.left};\n  cursor: pointer;\n`;\n\nfunction MapPane({ image, maps, circles, favorites, onCircleClick }) {\n  if (!maps) {\n    return <div />;\n  }\n\n  const circleIdx = {};\n\n  for (const c of circles) {\n    const numbers = (c.space_num || '').split('-');\n    for (const n of numbers) {\n      circleIdx[c.space_sym + n] = c;\n    }\n  }\n\n  return (\n    <div className=\"\">\n      <div className=\"text-muted mt1e\">\n        <FontAwesomeIcon icon={['fas', 'info-circle']} /> サークルのスペースをクリックすると詳細画面が開きます。\n      </div>\n      <div className=\"pre-scrollable mt1e\" style={{ height: parseInt(maps.image_height, 10) + 10 + \"px\", maxHeight: parseInt(maps.image_height, 10) + 10 + \"px\" }}>\n        <div style={{\n          display: \"inline-block\",\n          border: \"1px solid black\",\n          height: maps.image_height + \"px\",\n          width: maps.image_width + \"px\",\n          background: `url(${image}) 0 0 no-repeat`,\n          position: \"relative\"\n        }}>\n          {\n            maps.mappings.map(pos => {\n              const circle = circleIdx[pos.s + sprintf('%02d', pos.n)];\n\n              if (!circle) {\n                return null;\n              }\n\n              const bgColor = circle && favorites[circle.circle_id]\n                ? \"rgba(255,0,0,0.3)\"\n                : circle\n                  ? \"rgba(128,128,128,0.7)\"\n                  : \"rgba(64,64,64,0.3)\";\n\n              return <OverlayTrigger\n                key={pos.s + pos.n}\n                placement=\"left\"\n                overlay={\n                  <Tooltip id=\"tooltip\">\n                    {circle ? `${circle.space_sym}-${circle.space_num} : ${circle.circle_name} (${circle.penname})` : ''}\n                  </Tooltip>\n                }>\n                <CirclePositionElement\n                  top={pos.t + \"px\"}\n                  left={pos.l + \"px\"}\n                  width={pos.w}\n                  height={pos.h}\n                  bgColor={bgColor}\n                  blink={false}\n                  onClick={() => onCircleClick(circle)} />\n              </OverlayTrigger>;\n            })\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default MapPane;\n","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport _ from 'lodash';\nimport {Row, Col, Button, FormControl, Modal, Image, Badge, Card} from 'react-bootstrap';\n\nfunction generateTweetLink(tweetParams, text, url) {\n  const param = {\n    ...tweetParams,\n    text,\n    url,\n  };\n  return  'https://twitter.com/intent/tweet?' + _.reduce(\n    param,\n    (result, value, key) => result += `${encodeURIComponent(key)}=${encodeURIComponent(value)}&`,\n    ''\n  ).slice(0, -1);\n}\n\nexport default ({ show, showChecklistComponent, circle, favorite, loadings, onClose, onUpdateComment, onAddFavorite, onRemoveFavorite, tweetParams, exhibitionName, exhibitionID }) => {\n    const [comment, setComment] = useState(favorite ? favorite.comment : null);\n\n    return <Modal show={show} onHide={onClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          {\n            circle && <div>\n              <FontAwesomeIcon icon={['far', 'clipboard']} />&ensp;\n              {circle.circle_name}&emsp;\n              {\n                favorite &&\n                  <Button variant=\"warning\" size=\"sm\" onClick={e => { e.stopPropagation(); onRemoveFavorite(circle) }}>\n                    <FontAwesomeIcon icon={['fas', 'star']} /> お気に入り\n                  </Button>\n              }\n            </div>\n          }\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {\n          circle && <div>\n            <div className={'circleCut-parent ev_' + exhibitionID}>\n              <div className={\"circleCut text-center space-\" + circle.space_count}>\n                <Image src={circle.circlecut} style={{ border: favorite ? \"7px solid #f00\" : \"none\" }}/>\n\n                {\n                  circle.space_sym &&\n                    <span className='place'>{circle.space_sym}<br/>{circle.space_num.replace('-', ',')}</span>\n                }\n              </div>\n            </div>\n\n            <br/>\n            {\n              showChecklistComponent &&\n                <div>\n                  {\n                    favorite\n                        ? <div>\n                            {\n                              loadings[circle.circle_id]\n                                ? <Button block variant=\"warning\">\n                                    <FontAwesomeIcon icon={['fas', 'spinner']} spin pulse={true} /> 処理中\n                                  </Button>\n                                : <Button block variant=\"danger\" onClick={() => onRemoveFavorite(circle)}>\n                                    <FontAwesomeIcon icon={['fas', 'minus']} /> お気に入りから削除する\n                                  </Button>\n                            }\n                            <br/>\n                            <Row>\n                              <Col xs={12} sm={12} md={8} lg={8}>\n                                <FormControl\n                                  componentClass=\"textarea\"\n                                  placeholder=\"(コメントが未記入です)\"\n                                  value={comment || ''}\n                                  onChange={e => setComment(e.target.value)}/>\n                              </Col>\n                              <Col xs={12} sm={12} md={4} lg={4}>\n                                <Button className=\"circleDescripton-renewComment\" block variant=\"primary\" onClick={() => onUpdateComment(circle, comment)}>\n                                  <FontAwesomeIcon icon={['fas', 'sync-alt']} /> コメント更新\n                                </Button>\n                              </Col>\n                            </Row>\n                          </div>\n                        : loadings[circle.circle_id]\n                            ? <Button block variant=\"warning\">\n                                <FontAwesomeIcon icon={['fas', 'spinner']} spin pulse={true} /> 処理中\n                              </Button>\n                            : <Button block variant=\"primary\" onClick={() => onAddFavorite(circle)}>\n                                <FontAwesomeIcon icon={['far', 'star']}  /> お気に入りに追加する\n                              </Button>\n                  }\n                </div>\n            }\n            <br/>\n\n            <h4 className=\"text-center\">サークルの情報</h4>\n            <Card body bg=\"\">\n                <dl className=\"circle-name\">\n                  {\n                    circle.space_sym &&\n                      <dt><Badge variant=\"primary\">{circle.space_sym}-{circle.space_num}</Badge>&nbsp;</dt>\n                  }\n                  <dd>{circle.circle_name} ({circle.penname})</dd>\n                </dl>\n                {\n                  circle.pixiv_url &&\n                    <dl className=\"circle-link\">\n                      <dt>\n                        <Badge pill bg=\"secondary\"><FontAwesomeIcon icon={['fas', 'palette']} /> Pixiv</Badge>\n                      </dt>\n                      <dd>\n                        <a href={circle.pixiv_url} target=\"_blank\" rel=\"noopener noreferrer\">{circle.pixiv_url}</a>\n                      </dd>\n                    </dl>\n                }\n                {\n                  circle.site_url &&\n                  <dl className=\"circle-link\">\n                  <dt>\n                      <Badge pill bg=\"secondary\"><FontAwesomeIcon icon={['fas', 'link']} /> Web</Badge>\n                  </dt>\n                    <dd>\n                      <a href={circle.site_url} target=\"_blank\" rel=\"noopener noreferrer\">{circle.site_url}</a>\n                    </dd>\n                  </dl>\n                }\n                {\n                  circle.twitter_id &&\n                  <dl className=\"circle-link\">\n                    <dt>\n                    <Badge pill variant=\"secondary\"> 𝕏</Badge>\n                    </dt>\n                    <dd>\n                        <a href={\"https://twitter.com/\" + circle.twitter_id} target=\"_blank\" rel=\"noopener noreferrer\">{circle.twitter_id}</a>\n                    </dd>\n                  </dl>\n                }\n            </Card>\n\n            <h4 className=\"text-center mt1e\">サークルのお品書き</h4>\n            <Card body>\n              <p style={{ whiteSpace: \"pre\" }}>{\n                circle.circle_comment\n                  ? circle.circle_comment.split('\\n').map(l => <div style={{ wordWrap: 'break-word' }}>{l}</div>)\n                  : <Badge bg=\"secondary\">お品書きコメント未記入</Badge>\n\n              }</p>\n              {\n                circle.circle_link\n                  ? <a href={circle.circle_link} target=\"_blank\" rel=\"noopener noreferrer\">{circle.circle_link}</a>\n                  : <Badge bg=\"secondary\">お品書きリンク未記入</Badge>\n              }\n            </Card>\n            {\n              circle &&\n                <Button\n                    block\n                    className=\"mt1e\"\n                    variant=\"primary\"\n                    size=\"small\"\n                    href={generateTweetLink(\n                        tweetParams,\n                        `${exhibitionName} ` + (circle.space_sym && circle.space_num ? `【${circle.space_sym}-${circle.space_num}】 ` : '')\n                        + `${circle.circle_name} のサークル情報です。`,\n                        window.location.href,\n                    )}\n                    target=\"_blank\">\n                  <FontAwesomeIcon icon={['fav', 'twitter']} /> {' '}Xでサークルの情報をポストする（別画面が開きます）\n                </Button>\n            }\n          </div>\n        }\n      </Modal.Body>\n      <Modal.Footer>\n        <Button block variant=\"success\" onClick={onClose}>閉じる</Button>\n      </Modal.Footer>\n    </Modal>;\n};\n","import React from 'react';\nimport { Button, Modal, Badge, Card, ToggleButtonGroup, ToggleButton } from 'react-bootstrap';\n// import Toggle from 'react-bootstrap-toggle';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport default ({ show, config, me, onPublicLinkClick, onClose }) => {\n    if (!config) {\n      return <div/>;\n    }\n\n    const param = new window.URLSearchParams(window.location.search);\n    const publicUrl = window.location.origin\n      + (window.location.path || '')\n      + `?e=${param.get('e')}`\n      + `&id=${me ? me.screen_name : ''}`;\n\n    return <Modal show={show} onHide={onClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <FontAwesomeIcon icon={['fas', 'link']} /> チェックリストの公開設定\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Card>\n          <Card.Header>\n            <div>\n              <span>チェックリストを公開</span>\n              &nbsp;&nbsp;\n              <ToggleButtonGroup type=\"radio\" name=\"publish\" defaultValue={config.public ? 'published' : 'notPublished'}>\n                <ToggleButton\n                    onClick={onPublicLinkClick.bind(this, true)}\n                    value={'published'}\n                    variant=\"outline-primary\">{config.public}する</ToggleButton>\n                <ToggleButton\n                    onClick={onPublicLinkClick.bind(this, false)}\n                    value={'notPublished'}\n                    variant=\"outline-secondary\">しない</ToggleButton>\n              </ToggleButtonGroup>\n            </div>\n          </Card.Header>\n          <Card.Body>\n            <div>\n              {\n                config.public\n                  ? <span>\n                      チェックリストは <Badge bg=\"primary\">公開</Badge> に設定されています。\n                      <br/><br/>\n                      <h4>\n                        チェックリストの公開URL&nbsp;\n                        <CopyToClipboard text={publicUrl}>\n                          <Button variant=\"success\" size=\"sm\"><FontAwesomeIcon icon={['far', 'copy']} /> クリップボードにコピー</Button>\n                        </CopyToClipboard>\n                      </h4>\n                      <b><a href={publicUrl} target=\"_blank\" rel=\"noopener noreferrer\">{publicUrl}</a></b>\n                    </span>\n                  : <span>チェックリストは <Badge bg=\"secondary\">非公開</Badge> に設定されています。</span>\n              }\n            </div>\n          </Card.Body>\n        </Card>\n        <ul>\n          <li>上のボタンを押すことで共有・非共有が設定されます。共有ボタンを押していない場合は公開されません。</li>\n          <li>公開状態から非公開状態に戻すことも可能です。</li>\n          <li>公開したチェックリストを自分以外の人が編集することはできません。</li>\n        </ul>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button block variant=\"success\" onClick={onClose}>閉じる</Button>\n      </Modal.Footer>\n    </Modal>;\n};\n","import React from 'react';\nimport { Button, Modal } from 'react-bootstrap';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nexport default ({ show, loadings, checklistUrl, onClose, onExport }) => {\n    return <Modal show={show} onHide={onClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <FontAwesomeIcon icon={['far', 'export']} /> チェックリストのダウンロード\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {\n          checklistUrl &&\n          <Button block variant=\"outline-success\" size=\"lg\">\n            <a href={checklistUrl}><FontAwesomeIcon icon={['fas', 'file-download']} />  チェックリストのダウンロード</a>\n          </Button>\n        }\n        {\n          loadings.export &&\n            <Button block variant=\"warning\" size=\"lg\">\n              <FontAwesomeIcon icon={['fas', 'spinner']} spin pulse={true} /> 作成中\n            </Button>\n        }\n        {\n          !loadings.export && !checklistUrl && <Button block variant=\"primary\" size=\"lg\" onClick={onExport}>\n            <FontAwesomeIcon icon={['fas', 'file-alt']} /> チェックリストを作成する\n          </Button>\n        }\n      </Modal.Body>\n      <Modal.Footer>\n        <Button block variant=\"success\" onClick={onClose}>閉じる</Button>\n      </Modal.Footer>\n    </Modal>;\n};\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport {\n  Image,\n  ButtonToolbar,\n  Dropdown,\n  DropdownButton,\n  Badge,\n  Card,\n  Tab,\n  Nav,\n  // NavItem,\n  Button,\n  // ToggleButton,\n  // ToggleButtonGroup,\n  // ButtonGroup\n} from 'react-bootstrap';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { far } from '@fortawesome/free-regular-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport _ from 'lodash';\n\nimport CircleListPane from '../pane/CircleListPane';\nimport CirclecutPane from '../pane/CirclecutPane';\nimport FavoriteListPane from '../pane/FavoriteListPane';\nimport MapPane from '../pane/MapPane';\n\nimport CircleDescriptionModal from '../modal/CircleDescriptionModal';\nimport PublicLinkModal from '../modal/PublicLinkModal';\nimport ExportChecklistModal from '../modal/ExportChecklistModal';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import 'bootstrap/dist/css/bootstrap-theme.min.css';\nimport 'react-bootstrap-toggle/dist/bootstrap2-toggle.css';\nimport 'font-awesome/css/font-awesome.min.css';\nlibrary.add(fab, fas, far);\n\nclass AdminRoot extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n        circleList:  [],\n        circleIdx:   {},\n        favoriteIdx: {},\n        loading:     {},\n\n        showCircleDescModal: false,\n        showPublicLinkModal: false,\n        showExportChecklistModal: false,\n\n        exhibition:  null,\n        me: null,\n        config: null,\n        param: null,\n\n        spaceSymSorter: null,\n        publicChecklist: null,\n        map: null,\n        selectedCircle: null,\n        enableChecklist: false,\n        exportChecklistUrl: false,\n    };\n\n    this.ENDPOINT = \"https://checklist.familiar-life.info/api/\";\n\n    this.openCircleDescModal      = this.openCircleDescModal.bind(this);\n    this.closeCircleDescModal     = this.closeCircleDescModal.bind(this);\n    this.addFavorite              = this.addFavorite.bind(this);\n    this.removeFavorite           = this.removeFavorite.bind(this);\n    this.updateFavoriteComment    = this.updateFavoriteComment.bind(this);\n    this.updatePublicLinkSetting  = this.updatePublicLinkSetting.bind(this);\n    this.login                    = this.login.bind(this);\n    this.logout                   = this.logout.bind(this);\n    this.addLoading               = this.addLoading.bind(this);\n    this.removeLoading            = this.removeLoading.bind(this);\n    this.exportChecklist          = this.exportChecklist.bind(this);\n\n    this.openPublicLinkModal          = this.openPublicLinkModal.bind(this);\n    this.closePublicLinkModal         = this.closePublicLinkModal.bind(this);\n    this.openExportChecklistModal     = this.openExportChecklistModal.bind(this);\n    this.closeExportChecklistModal    = this.closeExportChecklistModal.bind(this);\n    this.removePublicChecklistDisplay = this.removePublicChecklistDisplay.bind(this);\n\n    this.getCircleList      = this.getCircleList.bind(this);\n    this.getUserData        = this.getUserData.bind(this);\n    this.getShareChecklist  = this.getShareChecklist.bind(this);\n  }\n\n  callChecklistApi(args, load_type) {\n    const token = localStorage.getItem(\"token\");\n\n    if (!token) return Promise.reject(\"No access_token. Please login!!\");\n\n    if (load_type) this.addLoading(load_type);\n\n    return fetch(this.ENDPOINT + \"endpoint\", {\n      headers: new Headers({ 'Authorization': \"Bearer \" + token }),\n      method: 'POST',\n      body: JSON.stringify(args),\n      cors: true,\n    })\n    .then(data => data.json())\n    .catch(err => {\n      alert(`サーバでエラーが発生しました。しばらく経ってもエラーが続く場合は管理者にお問い合わせください。(${err})`);\n      return;\n    })\n    .then(data => {\n      if (load_type) this.removeLoading(load_type);\n\n      if (data && data.error && (data.error === \"EXPIRED\" || data.error === \"INVALID_TOKEN\")) {\n        return;\n      }\n\n      if (data && data.error) {\n        alert(`リクエストでエラーが発生しました。しばらく経ってもエラーが続く場合は管理者にお問い合わせください。(${args.command}: ${data.error})`);\n        return;\n      }\n\n      return data;\n    });\n  }\n\n  addLoading(key) {\n    const { loading } = this.state;\n    loading[key] = 1;\n    this.setState({ loading });\n  }\n\n  removeLoading(key) {\n    const { loading } = this.state;\n    delete loading[key];\n    this.setState({ loading });\n  }\n\n  componentWillReceiveProps(props){\n    const param = new URLSearchParams(props.location.search);\n    const circle_id = param.get(\"circle_id\");\n    const circle = this.state.circleList.filter(c => c.circle_id === circle_id)[0];\n\n    if (circle) {\n      this.setState({ selectedCircle: circle, showCircleDescModal: true });\n    } else {\n      this.setState({ showCircleDescModal: false });\n    }\n  }\n\n  componentDidMount() {\n    const param = new window.URLSearchParams(window.location.search);\n    const exhibition = param.get('e');\n\n    // load setting\n    window.fetch(`${window.location.origin}/${exhibition}.json`, { credentials: 'include' })\n      .then(data => data.json())\n      .then(data => {\n        this.setState({ param: data });\n      })\n      .catch(err => {\n        console.log(\"config load fail. continue with default value\");\n        this.setState({ param: {} });\n      })\n      .then(this.getCircleList)\n      .then(data => {\n        if (!this.state.enableChecklist) {\n          console.log(\"list mode\");\n          return;\n        }\n\n        const param = new URLSearchParams(window.location.search);\n\n        if ( param.get(\"id\") ) {\n          return Promise.resolve(param.get(\"id\"))\n            .then(this.getShareChecklist)\n            .then(this.getUserData);\n        } else {\n          return this.getUserData();\n        }\n      });\n  }\n\n  getShareChecklist(member_id) {\n    const { exhibition } = this.state;\n\n    return fetch(`${this.ENDPOINT}/public/${exhibition.id}/?mid=${member_id}`, { cors: true })\n      .then(data => data.json())\n      .then(data => {\n        if (!data.favorite) {\n          console.log(\"PUBLIC_CHECKLIST_DATA_NG\", member_id);\n          alert(`${member_id} さんのチェックリストは存在しないか、公開設定になっていません。`);\n          return;\n        }\n\n        console.log(\"PUBLIC_CHECKLIST_DATA_OK\", member_id, data.favorite.length);\n        const idx = {};\n        for (const f of data.favorite) {\n          idx[f.circle_id] = f;\n        }\n\n        this.setState({ publicChecklist: { idx, config: data.config } });\n      })\n      .catch(err => {\n        console.log(\"Error on fetch public checklist:\", err);\n      });\n  }\n\n  getCircleList() {\n    const param = new URLSearchParams(location.search); // eslint-disable-line no-restricted-globals\n    const exhibition = param.get('e');\n    this.addLoading(\"circle\");\n    return fetch('https://data.familiar-life.info/' + exhibition + '.json')\n      .then(data => data.ok ? data : Promise.reject(data))\n      .then(data => data.json())\n      .then(data => {\n        this.removeLoading(\"circle\");\n        console.log(\"CIRCLE_DATA_OK:\", data.circles.length);\n        const enableChecklist = data.circles.filter(c => c.space_sym && c.space_num).length !== 0;\n\n        let circleList = data.circles;\n\n        // for circle of not upload circlecut, padding not uploaded image.\n        for (const c of circleList) {\n          if (!c.circlecut) {\n            c.circlecut = `/${exhibition}/not_uploaded.png?_=${c.circle_id}`;\n          }\n        }\n\n        let sorter;\n        if (data.sort_order) {\n          const sortMap = _.zipObject(data.sort_order, _.range(data.sort_order.length));\n          sorter = (a,b) => {\n            if (sortMap[a] && !sortMap[b]) {\n              return 1;\n            }\n            if (!sortMap[a] && sortMap[b]) {\n              return -1;\n            }\n            if (sortMap[a] > sortMap[b]) {\n              return 1;\n            }\n            if (sortMap[a] < sortMap[b]) {\n              return -1;\n            }\n            return 0;\n          };\n\n          circleList = circleList.sort((a,b) => {\n            const sym = sorter(a.space_sym, b.space_sym);\n            if (sym !== 0) return sym;\n\n            if (a.space_num > b.space_num) {\n              return 1;\n            }\n            if (a.space_num < b.space_num) {\n              return -1;\n            }\n            return 0;\n          });\n        }\n\n        this.setState({\n          circleList,\n          spaceSymSorter: sorter,\n          exhibition: data.exhibition,\n          map: data.map,\n          enableChecklist,\n        });\n        this.componentWillReceiveProps(this.props);\n      })\n      .catch(err => {\n        //alert(`即売会のデータが存在しません。(eid=${exhibition})`);\n        this.setState({ circleList: null });\n        console.error(\"ERROR:\", exhibition + '.json', err.status);\n      });\n  }\n\n  getUserData() {\n    const { exhibition } = this.state;\n\n    return this.callChecklistApi({ command: \"list\", exhibition_id: exhibition.id }, \"user\").then(data => {\n      if (!data) return;\n      console.log(\"FAVORITE_DATA_OK:\", data.favorite.length);\n\n      const favoriteIdx = {};\n      for (const f of data.favorite) {\n        favoriteIdx[f.circle_id] = f;\n      }\n\n      this.setState({ favoriteIdx, config: data.config, me: data.user });\n    });\n  }\n\n  login() {\n    const getJwtToken = event => {\n      if (typeof event.data === 'string') {\n        localStorage.setItem(\"token\", event.data);\n        this.getUserData();\n      }\n    };\n\n    window.open(this.ENDPOINT + \"auth/start\");\n    window.addEventListener('message', getJwtToken, false);\n  }\n\n  logout() {\n    localStorage.clear();\n    this.setState({ me: null, favoriteIdx: {} });\n  }\n\n  openCircleDescModal(selectedCircle) {\n    const param = new URLSearchParams(location.search); // eslint-disable-line no-restricted-globals\n    param.append(\"circle_id\", selectedCircle.circle_id);\n    this.props.history.push(\"?\" + param.toString());\n  }\n\n  closeCircleDescModal() {\n    const param = new URLSearchParams(location.search); // eslint-disable-line no-restricted-globals\n    param.delete(\"circle_id\");\n    this.props.history.push(\"?\" + param.toString());\n  }\n\n  openPublicLinkModal() {\n    this.setState({ showPublicLinkModal: true });\n  }\n\n  closePublicLinkModal() {\n    this.setState({ showPublicLinkModal: false });\n  }\n\n  openExportChecklistModal() {\n    this.setState({ showExportChecklistModal: true });\n  }\n\n  closeExportChecklistModal() {\n    this.setState({ showExportChecklistModal: false });\n  }\n\n  addFavorite(circle) {\n    const { favoriteIdx, exhibition } = this.state;\n\n    return this.callChecklistApi({ command: \"add\", exhibition_id: exhibition.id, circle_id: circle.circle_id }, circle.circle_id).then(data => {\n      if (!data) return;\n\n      // console.log(\"ADD_FAVORITE\");\n      favoriteIdx[circle.circle_id] = data;\n      this.setState({ favoriteIdx });\n    });\n  }\n\n  removeFavorite(circle) {\n    const { favoriteIdx } = this.state;\n\n    this.callChecklistApi({ command: \"remove\", circle_id: circle.circle_id }, circle.circle_id).then(data => {\n      if (!data) return;\n\n      // console.log(\"REMOVE_FAVORITE\");\n      delete favoriteIdx[circle.circle_id];\n      this.setState({ favoriteIdx });\n    });\n  }\n\n  updateFavoriteComment(circle,comment) {\n    const { favoriteIdx } = this.state;\n\n    this.callChecklistApi({ command: \"update\", circle_id: circle.circle_id, comment: comment }, circle.circle_id).then(data => {\n      if (!data) return;\n\n      console.log(\"UPDATE_FAVORITE\", data);\n      const fav = favoriteIdx[circle.circle_id];\n      fav.comment = comment;\n      this.setState({ favoriteIdx });\n    });\n  }\n\n  updatePublicLinkSetting(isPublic) {\n    const { exhibition } = this.state;\n\n    this.callChecklistApi({ command: \"public\", exhibition_id: exhibition.id, public: isPublic }).then(data => {\n      if (!data) return;\n\n      console.log(\"UPDATE_PUBLIC_LINK\", data);\n      this.setState({ config: { public: isPublic } });\n    });\n  }\n\n  removePublicChecklistDisplay() {\n    this.setState({ publicChecklist: null });\n  }\n\n  exportChecklist() {\n    const { exhibition } = this.state;\n    this.callChecklistApi({ command: \"export\", exhibition_id: exhibition.id }, 'export').then(data => {\n      console.log(\"EXPORT_CHECKLIST\", data);\n      this.setState({ exportChecklistUrl: data.url });\n    });\n  }\n\n  render() {\n    const {\n      circleList, favoriteIdx, loading,\n      showCircleDescModal, showPublicLinkModal, showExportChecklistModal, publicChecklist, exportChecklistUrl,\n      selectedCircle, me, config, exhibition, enableChecklist, spaceSymSorter, param,\n    } = this.state;\n\n    if (circleList instanceof Array && circleList.length === 0) {\n      return <div className=\"container text-center\">\n        <h3>サークルデータを読み込んでいます...</h3>\n      </div>;\n    }\n\n    if (!circleList) {\n      return <div className=\"container text-center\">\n        <h2>404 Not Found</h2>\n        <br/>\n        <h4>サークルのデータが見つかりません</h4>\n      </div>;\n    }\n\n    return <div className={'container ev_' + exhibition.id}>\n      <br/>\n      <Card body bg=\"light\">\n        <span>\n          {\n            exhibition\n              ? <span> {exhibition.exhibition_name} サークル一覧 <Badge pill variant=\"secondary\">{circleList.length}</Badge></span>\n              : 'サークル一覧'\n          }\n        </span>\n        {/* {\n          enableChecklist &&\n            <div className=\"pull-right\">\n              {\n                loading.auth\n                  ? <Button variant=\"warning\" size=\"sm\">\n                      <FontAwesomeIcon icon={['fas', 'spinner']} spin pulse={true} /> 読み込み中...\n                    </Button>\n                  : me\n                    ? <ButtonToolbar>\n                        <DropdownButton\n                          alignRight\n                          variant=\"success\"\n                          size=\"sm\"\n                          id=\"dropdown-size-extra-small\"\n                          title={<span><FontAwesomeIcon icon={['fab', 'twitter']} /> {me.screen_name}</span>}>\n                            <Dropdown.Item eventKey=\"1\">\n                              {me.display_name + ' '}\n                              <Image circle src={me.profile_image_url} style={{width: \"32px\", height: \"32px\", borderRadius: \"50%\" }}/>\n                            </Dropdown.Item>\n                            <Dropdown.Item eventKey=\"2\" onClick={this.logout}>\n                              ログアウト <FontAwesomeIcon icon={['fas', 'sign-out-alt']} />\n                            </Dropdown.Item>\n                            <Dropdown.Divider />\n                            <Dropdown.Item eventKey=\"3\" onClick={this.openExportChecklistModal}>\n                              <FontAwesomeIcon icon={['fas', 'file-download']} /> エクスポート\n                            </Dropdown.Item>\n                            <Dropdown.Divider />\n                            <Dropdown.Item eventKey=\"4\" onClick={this.openPublicLinkModal}>\n                              <FontAwesomeIcon icon={['fas', 'link']} /> 公開設定\n                            </Dropdown.Item>\n                        </DropdownButton>\n                      </ButtonToolbar>\n                    : <Button variant=\"primary\" size=\"sm\" onClick={this.login}>\n                      <FontAwesomeIcon icon={['fab', 'twitter']} /> Login via Twitter\n                      </Button>\n              }\n            </div>\n        } */}\n      </Card>\n      {/* {\n        (enableChecklist && !me) &&\n          <div className=\"text-info mt1e mb1e\">\n            <FontAwesomeIcon icon={['fas', 'info-circle']} /> Twitterのアカウントでログインを行うことでチェックリストの作成を行うことが可能です。\n            <br/>\n            <span className=\"fz80p\">\n              （取得した情報はログインしたユーザの情報取得のみに利用し、ツイートの取得・自動ツイート等は行いません。）\n            </span>\n          </div>\n      } */}\n      <Tab.Container id=\"mainContainer\" defaultActiveKey=\"circlecut\">\n        <div className=\"mt1e\">\n          <Nav variant=\"pills\">\n            <Nav.Item>\n              <Nav.Link eventKey=\"list\"><FontAwesomeIcon icon={['fas', 'list']} /> リスト表示</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link eventKey=\"circlecut\"><FontAwesomeIcon icon={['fas', 'images']} /> サークルカット</Nav.Link>\n            </Nav.Item>\n            {\n              param.map &&\n                <Nav.Item>\n                  <Nav.Link eventKey=\"map\"><FontAwesomeIcon icon={['fas', 'map-marked-alt']} /> マップ</Nav.Link>\n                </Nav.Item>\n            }\n            {/* {\n              enableChecklist &&\n                <Nav.Item>\n                  <Nav.Link eventKey=\"favorite\"><FontAwesomeIcon icon={['fas', 'star']} /> お気に入り <Badge pill variant=\"light\">{Object.keys(favoriteIdx).length}</Badge></Nav.Link>\n                </Nav.Item>\n            } */}\n          </Nav>\n          <Tab.Content>\n            <Tab.Pane eventKey=\"list\">\n              <CircleListPane\n                circles={circleList}\n                favorites={favoriteIdx}\n                publicChecklist={publicChecklist}\n                loadings={loading}\n                onRowClick={this.openCircleDescModal}\n                onAddFavorite={this.addFavorite}\n                onRemoveFavorite={this.removeFavorite}\n                onRemovePublicChecklist={this.removePublicChecklistDisplay}\n                showChecklistComponent={!!me}\n                enableChecklist={enableChecklist}\n                spaceSymSorter={spaceSymSorter}/>\n            </Tab.Pane>\n            <Tab.Pane eventKey=\"circlecut\">\n              <CirclecutPane\n                circles={circleList}\n                favorites={favoriteIdx}\n                loadings={loading}\n                onImageClick={this.openCircleDescModal}\n                onAddFavorite={this.addFavorite}\n                onRemoveFavorite={this.removeFavorite}\n                showChecklistComponent={!!me}\n                spaceSymSorter={spaceSymSorter}/>\n            </Tab.Pane>\n            {\n              enableChecklist &&\n                <Tab.Pane eventKey=\"favorite\">\n                  <FavoriteListPane\n                    circles={circleList}\n                    favorites={favoriteIdx}\n                    onRowClick={this.openCircleDescModal}\n                    spaceSymSorter={spaceSymSorter}/>\n                </Tab.Pane>\n            }\n            {\n              param.map &&\n                <Tab.Pane eventKey=\"map\">\n                  <MapPane\n                    image={`/${exhibition.id}/map.png`}\n                    maps={param.map}\n                    circles={circleList}\n                    favorites={favoriteIdx}\n                    onCircleClick={this.openCircleDescModal}/>\n                </Tab.Pane>\n            }\n          </Tab.Content>\n        </div>\n      </Tab.Container>\n\n      <CircleDescriptionModal\n        show={showCircleDescModal}\n        circle={selectedCircle}\n        favorite={selectedCircle ? favoriteIdx[selectedCircle.circle_id] : null}\n        loadings={loading}\n        onClose={this.closeCircleDescModal}\n        onUpdateComment={this.updateFavoriteComment}\n        onAddFavorite={this.addFavorite}\n        onRemoveFavorite={this.removeFavorite}\n        showChecklistComponent={!!me}\n        tweetParams={param.tweet}\n        exhibitionName={exhibition.exhibition_name}\n        exhibitionID={exhibition.id}/>\n\n      <PublicLinkModal\n        show={showPublicLinkModal}\n        me={me}\n        config={config}\n        onPublicLinkClick={this.updatePublicLinkSetting}\n        onClose={this.closePublicLinkModal}/>\n\n      <ExportChecklistModal\n        show={showExportChecklistModal}\n        loadings={loading}\n        checklistUrl={exportChecklistUrl}\n        onClose={this.closeExportChecklistModal}\n        onExport={this.exportChecklist}/>\n\n    </div>;\n  }\n}\n\nexport default withRouter(AdminRoot);\n","import React from 'react';\n\nclass Error extends React.Component {\n  render() {\n    return <div className=\"container\">\n      <br/>\n      <h4>404 Not Found</h4>\n      ｴｲｻｧｰｰｲ ﾊﾗﾏｽｺｫｰｰｰｰｲ\n    </div>;\n  }\n}\n\nexport default Error;","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport App from './App';\nimport Error from './Error';\n\nclass Router extends React.Component {\n  render() {\n    return <BrowserRouter>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={App}/>\n          <Route component={Error}/>\n        </Switch>\n      </div>\n    </BrowserRouter>;\n  }\n}\n\nexport default Router;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'; // eslint-disable-line no-unused-vars\nimport ReactDOM from 'react-dom';\nimport Router from './route/Router';\n// import registerServiceWorker from './registerServiceWorker';\nimport { unregister } from './registerServiceWorker';\n\nimport 'babel-polyfill';\nimport 'whatwg-fetch';\nimport 'url-polyfill';\n\nReactDOM.render(<Router />, document.getElementById('root'));\n// registerServiceWorker();\nunregister();\n"],"sourceRoot":""}